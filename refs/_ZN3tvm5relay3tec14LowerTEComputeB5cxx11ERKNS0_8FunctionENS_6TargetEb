<dec f='tvm/relay/backend/te_compiler_cache.h' l='219' type='std::pair&lt;Array&lt;te::Tensor&gt;, std::string&gt; tvm::relay::tec::LowerTECompute(const tvm::relay::Function &amp; source_func, tvm::Target target, bool return_inputs = true)'/>
<doc f='tvm/relay/backend/te_compiler_cache.h' l='212'>/*!
 * \brief Lowers Relay primitive Function to TE Compute
 * \param source_func The primitive function to be lowered.
 * \param target The target we want to create schedule for.
 * \param return_inputs If true, prepend input tensors to the output array of tensors.
 * \return Pair of schedule and fused function name.
 */</doc>
<use f='tvm/relay/backend/task_extraction.cc' l='64' u='c' c='_ZN3tvm5relay7backend11ExtractTaskENS_8IRModuleENS_6TargetENS_7runtime3MapINS4_6StringENS4_7NDArrayEvvEENS4_15TypedPackedFuncIFNS4_8OptionalINS_3tir8P10298777'/>
<def f='tvm/relay/backend/te_compiler_cache.cc' l='798' ll='815' type='std::pair&lt;Array&lt;te::Tensor&gt;, std::string&gt; tvm::relay::tec::LowerTECompute(const tvm::relay::Function &amp; source_func, tvm::Target target, bool return_inputs = true)'/>
