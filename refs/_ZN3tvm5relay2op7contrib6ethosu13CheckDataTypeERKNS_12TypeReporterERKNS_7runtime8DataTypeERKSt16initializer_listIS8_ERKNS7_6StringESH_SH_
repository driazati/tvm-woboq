<dec f='tvm/relay/op/contrib/ethosu/common.h' l='82' type='void tvm::relay::op::contrib::ethosu::CheckDataType(const tvm::relay::TypeReporter &amp; reporter, const tvm::DataType &amp; data_type, const std::initializer_list&lt;DataType&gt; &amp; allowed_data_types, const tvm::runtime::String &amp; operator_name, const tvm::runtime::String &amp; tensor_name, const tvm::runtime::String &amp; operator_type = &quot;&quot;)'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='61' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='62' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='65' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='68' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='69' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='72' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/binary_elementwise.cc' l='73' u='c' c='_ZN3tvm5relay2op7contrib6ethosu26EthosuBinaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<doc f='tvm/relay/op/contrib/ethosu/common.h' l='73'>/*! \brief Check the data type for a given input matches one given in allowed_data_types. Raise a
 * type inference error if not.
 * \param reporter The infer type reporter.
 * \param data_type The data type to check.
 * \param allowed_data_types An initializer list of allowed data types.
 * \param operator_name The name of the operator to report.
 * \param tensor_name The name of the tensor to report e.g. &quot;ifm&quot;, &quot;ofm&quot;.
 * \param operator_type The type of the operator to report e.g. &quot;ADD&quot; for binary_elementwise.
 */</doc>
<def f='tvm/relay/op/contrib/ethosu/common.cc' l='102' ll='128' type='void tvm::relay::op::contrib::ethosu::CheckDataType(const tvm::relay::TypeReporter &amp; reporter, const tvm::DataType &amp; data_type, const std::initializer_list&lt;DataType&gt; &amp; allowed_data_types, const tvm::runtime::String &amp; operator_name, const tvm::runtime::String &amp; tensor_name, const tvm::runtime::String &amp; operator_type = &quot;&quot;)'/>
<use f='tvm/relay/op/contrib/ethosu/convolution.cc' l='53' u='c' c='_ZN3tvm5relay2op7contrib6ethosu15EthosuConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/convolution.cc' l='54' u='c' c='_ZN3tvm5relay2op7contrib6ethosu15EthosuConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/convolution.cc' l='56' u='c' c='_ZN3tvm5relay2op7contrib6ethosu15EthosuConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/depthwise.cc' l='54' u='c' c='_ZN3tvm5relay2op7contrib6ethosu24EthosuDepthwiseConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/depthwise.cc' l='55' u='c' c='_ZN3tvm5relay2op7contrib6ethosu24EthosuDepthwiseConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/depthwise.cc' l='57' u='c' c='_ZN3tvm5relay2op7contrib6ethosu24EthosuDepthwiseConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/depthwise.cc' l='61' u='c' c='_ZN3tvm5relay2op7contrib6ethosu24EthosuDepthwiseConv2DRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/identity.cc' l='49' u='c' c='_ZN3tvm5relay2op7contrib6ethosu17EthosuIdentityRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/pooling.cc' l='56' u='c' c='_ZN3tvm5relay2op7contrib6ethosu16EthosuPoolingRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/unary_elementwise.cc' l='59' u='c' c='_ZN3tvm5relay2op7contrib6ethosu25EthosuUnaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
<use f='tvm/relay/op/contrib/ethosu/unary_elementwise.cc' l='61' u='c' c='_ZN3tvm5relay2op7contrib6ethosu25EthosuUnaryElementwiseRelERKNS_7runtime5ArrayINS_4TypeEvEEiRKNS_5AttrsERKNS_12TypeReporterE'/>
