<dec f='tvm/relay/op/memory/on_device.h' l='102' type='tvm::relay::Expr tvm::relay::MaybeOnDevice(tvm::relay::Expr body, tvm::VirtualDevice virtual_device, bool constrain_result = false, bool constrain_body = true)'/>
<use f='tvm/relay/op/memory/on_device.h' l='107' u='c' c='_ZN3tvm5relay18MaybeOnDeviceFixedENS_9RelayExprENS_13VirtualDeviceE'/>
<use f='tvm/relay/op/memory/on_device.h' l='113' u='c' c='_ZN3tvm5relay22MaybeOnDeviceWithPropsENS_9RelayExprERKNS0_13OnDevicePropsE'/>
<doc f='tvm/relay/op/memory/on_device.h' l='88'>/*!
 * \brief Wraps \p expr in an &quot;on_device&quot; CallNode for \p virtual_device and \p constraint if the
 * \p VirtualDevice for \p expr cannot otherwise be recovered by the lexical scoping convention.
 * This means we will NOT wrap if:
 *  - \p virtual_device is full unconstrained, which signals there are no device annotations
 *    already in play.
 *  - \p expr is an operator or primitive function literal. These are device polymorphic.
 *  - \p expr is a non-primitive function literal. The device is captured by the
 *    &quot;result_virtual_device&quot; attribute on the function itself.
 *  - \p expr is a global var. The device is on the function attributes the global is bound to.
 *  - \p expr is a local var. The device is tracked by the device aware visitors for us.
 *  - \p expr is a constructor. These are device polymorphic.
 * Nested on_device calls will never be constructed, they are instead merged on-the-fly.
 */</doc>
<def f='tvm/relay/op/memory/on_device.cc' l='62' ll='113' type='tvm::relay::Expr tvm::relay::MaybeOnDevice(tvm::relay::Expr body, tvm::VirtualDevice virtual_device, bool constrain_result = false, bool constrain_body = true)'/>
