<dec f='tvm/auto_scheduler/search_policy/sketch_policy.h' l='162' type='Array&lt;tvm::auto_scheduler::MeasureInput&gt; tvm::auto_scheduler::SketchPolicyNode::PickStatesWithEpsGreedy(const Array&lt;tvm::auto_scheduler::State&gt; &amp; best_states, const Array&lt;tvm::auto_scheduler::State&gt; &amp; random_states, int remaining_n_trials)'/>
<doc f='tvm/auto_scheduler/search_policy/sketch_policy.h' l='155'>/*!
   * \brief Pick states from best states and random states with eps-greedy policy.
   * \param best_states States picked by cost model.
   * \param random_states States picked randomly.
   * \param remaining_n_trials The remaining number of states need to be generated.
   * \return The generated states to be measured, wrapped in MeasureInput.
   */</doc>
<use f='tvm/auto_scheduler/search_policy/sketch_policy.cc' l='200' u='c' c='_ZN3tvm14auto_scheduler16SketchPolicyNode6SearchEiiiNS0_15ProgramMeasurerE'/>
<use f='tvm/auto_scheduler/search_policy/sketch_policy.cc' l='261' u='c' c='_ZN3tvm14auto_scheduler16SketchPolicyNode22ContinueSearchOneRoundEiNS0_15ProgramMeasurerE'/>
<def f='tvm/auto_scheduler/search_policy/sketch_policy.cc' l='626' ll='672' type='Array&lt;tvm::auto_scheduler::MeasureInput&gt; tvm::auto_scheduler::SketchPolicyNode::PickStatesWithEpsGreedy(const Array&lt;tvm::auto_scheduler::State&gt; &amp; best_states, const Array&lt;tvm::auto_scheduler::State&gt; &amp; random_states, int remaining_n_trials)'/>
