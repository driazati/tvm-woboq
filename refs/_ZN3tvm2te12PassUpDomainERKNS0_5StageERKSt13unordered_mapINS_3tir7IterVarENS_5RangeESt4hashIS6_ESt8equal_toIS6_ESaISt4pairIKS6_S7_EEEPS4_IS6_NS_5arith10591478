<dec f='tvm/te/schedule/message_passing.h' l='84' type='void tvm::te::PassUpDomain(const tvm::te::Stage &amp; stage, const std::unordered_map&lt;IterVar, Range&gt; &amp; dom_map, std::unordered_map&lt;IterVar, IntSet&gt; * p_state)'/>
<doc f='tvm/te/schedule/message_passing.h' l='76'>/*!
 * \param Upward inference of domain set of each IterVar.
 *  given domain assignment of the leaves,
 *
 * \param stage The stage to operate on.
 * \param dom_map The domain map of each iteration variable&apos;s maximum domain.
 * \param p_state The index state of each IterVar.
 */</doc>
<use f='tvm/te/operation/tensorize.cc' l='80' u='c' c='_ZN3tvm2te20InferTensorizeRegionEPKNS0_13ComputeOpNodeERKNS0_5StageERKSt13unordered_mapINS_3tir7IterVarENS_5RangeESt4hashIS9_ESt8equal_toIS9_ESaISt4pa14645131'/>
<use f='tvm/te/schedule/bound.cc' l='179' u='c' c='_ZN3tvm2te14InferRootBoundERKNS0_5StageERKNS0_12GraphContextEPSt13unordered_mapINS_3tir7IterVarENS_5RangeESt4hashIS9_ESt8equal_toIS9_ESaISt4pairIKS9_SA_EEE'/>
<def f='tvm/te/schedule/message_passing.cc' l='462' ll='495' type='void tvm::te::PassUpDomain(const tvm::te::Stage &amp; stage, const std::unordered_map&lt;IterVar, Range&gt; &amp; dom_map, std::unordered_map&lt;IterVar, IntSet&gt; * p_state)'/>
