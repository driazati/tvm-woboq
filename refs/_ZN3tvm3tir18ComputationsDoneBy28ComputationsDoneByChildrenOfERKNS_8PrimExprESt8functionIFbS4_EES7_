<dec f='tvm/tir/transforms/common_subexpr_elim_tools.h' l='102' type='static tvm::tir::ComputationTable tvm::tir::ComputationsDoneBy::ComputationsDoneByChildrenOf(const tvm::PrimExpr &amp; expr, std::function&lt;bool (const PrimExpr &amp;)&gt; is_eligible_computation, std::function&lt;bool (const PrimExpr &amp;)&gt; can_contain_computations)'/>
<use f='tvm/tir/transforms/common_subexpr_elim_tools.cc' l='378' u='c' c='_ZN3tvm3tir18ComputationsDoneBy9VisitExprERKNS_8PrimExprE'/>
<def f='tvm/tir/transforms/common_subexpr_elim_tools.cc' l='528' ll='542' type='static tvm::tir::ComputationTable tvm::tir::ComputationsDoneBy::ComputationsDoneByChildrenOf(const tvm::PrimExpr &amp; expr, std::function&lt;bool (const PrimExpr &amp;)&gt; is_eligible_computation, std::function&lt;bool (const PrimExpr &amp;)&gt; can_contain_computations)'/>
<doc f='tvm/tir/transforms/common_subexpr_elim_tools.cc' l='519'>/*!
 * \brief Static method that returns the computations done by the children of an expression.
 * \param expr The expression to analyze
 * \param is_eligible_computation The predicate which decides if an expression is eligible for
      being introduced in a new variable
 * \param can_contain_computations The predicate which decides if an expression can contain an
      eligible computation
 * \return The hashtable containing the (syntactic) computations done by children nodes of `expr`
 */</doc>
