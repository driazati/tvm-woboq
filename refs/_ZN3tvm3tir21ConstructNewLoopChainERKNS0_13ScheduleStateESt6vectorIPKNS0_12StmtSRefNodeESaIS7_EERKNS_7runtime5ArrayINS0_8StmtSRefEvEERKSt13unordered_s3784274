<def f='tvm/tir/schedule/primitive/loop_transformation.cc' l='653' ll='691' type='tvm::tir::For tvm::tir::ConstructNewLoopChain(const tvm::tir::ScheduleState &amp; self, std::vector&lt;const StmtSRefNode *&gt; chain, const Array&lt;tvm::tir::StmtSRef&gt; &amp; ordered_loop_srefs, const std::unordered_set&lt;const StmtSRefNode *&gt; &amp; loop_srefs)'/>
<use f='tvm/tir/schedule/primitive/loop_transformation.cc' l='717' u='c' c='_ZN3tvm3tir7ReorderENS0_13ScheduleStateERKNS_7runtime5ArrayINS0_8StmtSRefEvEE'/>
<doc f='tvm/tir/schedule/primitive/loop_transformation.cc' l='643'>/*!
 * \brief Construct a loop chain in the new order
 * \param self The schedule state
 * \param chain The loops in the reorder range
 * \param ordered_loop_srefs The loop srefs to be reordered
 * \param loop_srefs The set containing loop srefs to be reordered
 * \return The new loop chain
 * \throws ScheduleError If the domain of an outer loop depends on any of the inner loops after
 * reordering
 */</doc>
