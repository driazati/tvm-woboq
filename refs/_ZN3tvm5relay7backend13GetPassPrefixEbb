<dec f='tvm/relay/backend/utils.h' l='571' type='Array&lt;tvm::relay::backend::Pass&gt; tvm::relay::backend::GetPassPrefix(bool is_homogeneous, bool is_vm)'/>
<doc f='tvm/relay/backend/utils.h' l='561'>/*!
 * \brief Get the sequence of Relay optimization passes based on backend type.
 * The prefix of the Relay passes almost overlaps between the vm and graph backend, with some slight
 * difference. This function unifies the shared optimization pass prefix between vm and graph
 * runtime, and returns the pass prefix given the backend type.
 *
 * \param is_homogeneous True if all primitives are to be executed on the same device and target.
 * \param is_vm True if passes are to be used for the vm executor.
 * \return An array of passes.
 */</doc>
<use f='tvm/relay/backend/build_module.cc' l='331' u='c' c='_ZN3tvm5relay7backend16RelayBuildModule12OptimizeImplENS_8IRModuleE'/>
<use f='tvm/relay/backend/task_extraction.cc' l='43' u='c' c='_ZN3tvm5relay7backend11ExtractTaskENS_8IRModuleENS_6TargetENS_7runtime3MapINS4_6StringENS4_7NDArrayEvvEENS4_15TypedPackedFuncIFNS4_8OptionalINS_3tir8P10298777'/>
<def f='tvm/relay/backend/utils.cc' l='217' ll='279' type='Array&lt;tvm::relay::backend::Pass&gt; tvm::relay::backend::GetPassPrefix(bool is_homogeneous, bool is_vm)'/>
<use f='tvm/relay/backend/vm/compiler.cc' l='1056' u='c' c='_ZN3tvm5relay2vm10VMCompiler18OptimizeModuleImplENS_8IRModuleE'/>
