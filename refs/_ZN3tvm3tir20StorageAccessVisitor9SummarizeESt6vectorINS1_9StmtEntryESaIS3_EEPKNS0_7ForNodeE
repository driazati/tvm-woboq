<dec f='tvm/tir/transforms/storage_access.h' l='121' type='std::vector&lt;AccessEntry&gt; tvm::tir::StorageAccessVisitor::Summarize(std::vector&lt;StmtEntry&gt; seq, const tvm::tir::ForNode * loop)'/>
<ovr f='tvm/tir/transforms/coproc_sync.cc' l='122' c='_ZN3tvm3tir17CoProcSyncPlanner9SummarizeESt6vectorINS0_20StorageAccessVisitor9StmtEntryESaIS4_EEPKNS0_7ForNodeE'/>
<ovr f='tvm/tir/transforms/coproc_sync.cc' l='242' c='_ZN3tvm3tir21CoProcBarrierDetector9SummarizeESt6vectorINS0_20StorageAccessVisitor9StmtEntryESaIS4_EEPKNS0_7ForNodeE'/>
<doc f='tvm/tir/transforms/storage_access.h' l='110'>/*!
   * \brief Summarize the sequence of operations into parent.
   *
   *  Insert synchronization if necessary and remove un-necessary
   *  memory access which are already synced.
   *
   * \param seq The sequence of the access operations.
   * \param loop Pass loop node if it is a loop, otherwise nullptr.
   * \return The summarized sequence that represent access that
   *  the parent should taken care of to synchronize.
   */</doc>
<use f='tvm/tir/transforms/storage_access.cc' l='113' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_12AttrStmtNodeE'/>
<use f='tvm/tir/transforms/storage_access.cc' l='137' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_12AttrStmtNodeE'/>
<use f='tvm/tir/transforms/storage_access.cc' l='158' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_7ForNodeE'/>
<use f='tvm/tir/transforms/storage_access.cc' l='188' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_14IfThenElseNodeE'/>
<use f='tvm/tir/transforms/storage_access.cc' l='193' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_14IfThenElseNodeE'/>
<use f='tvm/tir/transforms/storage_access.cc' l='208' u='c' c='_ZN3tvm3tir20StorageAccessVisitor10VisitStmt_EPKNS0_9WhileNodeE'/>
<ovr f='tvm/tir/transforms/thread_storage_sync.cc' l='52' c='_ZN3tvm3tir17ThreadSyncPlanner9SummarizeESt6vectorINS0_20StorageAccessVisitor9StmtEntryESaIS4_EEPKNS0_7ForNodeE'/>
