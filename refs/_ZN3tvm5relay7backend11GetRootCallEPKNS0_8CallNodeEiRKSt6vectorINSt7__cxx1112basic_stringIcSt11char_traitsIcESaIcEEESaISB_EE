<def f='tvm/relay/backend/utils.h' l='458' ll='479' type='const tvm::relay::CallNode * tvm::relay::backend::GetRootCall(const tvm::relay::CallNode * current_call, int depth, const std::vector&lt;std::string&gt; &amp; expected_op_names)'/>
<use f='tvm/relay/backend/utils.h' l='478' u='c' c='_ZN3tvm5relay7backend11GetRootCallEPKNS0_8CallNodeEiRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISB_EE'/>
<doc f='tvm/relay/backend/utils.h' l='450'>/*!
 * \brief Retrieve the &quot;root&quot; op nested inside a fused call, such as conv2d in relu(add(conv2d))
 * \param call A Relay call node. Typically nn.relu when called the first time.
 * \param depth The number of calls before the root op, counting from current_call.
 * \param expected_op_names The names of ops in this fused call. Example: {&quot;nn.conv2d&quot;, &quot;add&quot;,
 * &quot;nn.relu&quot;}
 * \return A CallNode corresponding to the root op, whose name is expected_op_names[0]
 */</doc>
