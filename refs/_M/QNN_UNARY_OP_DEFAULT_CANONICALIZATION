<dec f='tvm/relay/qnn/op/op_common.h' l='442'/>
<doc f='tvm/relay/qnn/op/op_common.h' l='434'>/*! Quick helper macro
 * Create a default canonicalization for a QNN operator, which dequantizes the operator
 * runs the calculation using the provided Call func, and then requantizes.
 *
 * FloatingPointFunc is usually a handle from &quot;src/relay/transforms/pattern_utils.h&quot;
 *
 * \param FloatingPointFunc the floating point function with function signature `Expr Erf(Expr e)`
 */</doc>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='32' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='35' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='38' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='41' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='44' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='47' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='51' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='54' u='c'/>
<use f='tvm/relay/qnn/op/unary_elementwise_op.cc' l='57' u='c'/>
