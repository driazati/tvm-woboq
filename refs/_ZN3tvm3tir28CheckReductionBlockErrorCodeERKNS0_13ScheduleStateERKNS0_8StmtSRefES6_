<def f='tvm/tir/schedule/analysis/analysis.cc' l='345' ll='368' type='int tvm::tir::CheckReductionBlockErrorCode(const tvm::tir::ScheduleState &amp; self, const tvm::tir::StmtSRef &amp; block_sref, const tvm::tir::StmtSRef &amp; scope_root_sref)'/>
<use f='tvm/tir/schedule/analysis/analysis.cc' l='372' u='c' c='_ZN3tvm3tir16IsReductionBlockERKNS0_13ScheduleStateERKNS0_8StmtSRefES6_'/>
<use f='tvm/tir/schedule/analysis/analysis.cc' l='395' u='c' c='_ZN3tvm3tir19CheckReductionBlockERKNS0_13ScheduleStateERKNS0_8StmtSRefES6_'/>
<use f='tvm/tir/schedule/analysis/analysis.cc' l='440' u='c' c='_ZN3tvm3tir29CheckCompleteOrReductionBlockERKNS0_13ScheduleStateERKNS0_8StmtSRefES6_'/>
<use f='tvm/tir/schedule/analysis/analysis.cc' l='492' u='c' c='_ZN3tvm3tir27CheckSubtreeCompactDataflowERKNS0_13ScheduleStateERKNS0_8StmtSRefE'/>
<doc f='tvm/tir/schedule/analysis/analysis.cc' l='336'>/*!
 * \brief A helper function that checks whether a given block is a reduction block under the scope,
 * or return the condition it violates if it is not a reduction block
 * \param self The schedule state
 * \param block_sref The block to be checked
 * \param scope_root_sref The sref to the root block of the scope that `block_sref` is in
 * \return 0 if the block is a reduction block, or a positive integer indicating which condition is
 * first violated
 */</doc>
