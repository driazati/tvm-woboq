<dec f='tvm/relay/transforms/combine_parallel_op.h' l='78' type='void tvm::relay::BranchGroupFinder::BranchGroupFinder(const tvm::relay::Op &amp; op, tvm::relay::FIsSupportedOp fis_supported_op, tvm::relay::FAreCompatibleOps fare_compatible_ops)'/>
<doc f='tvm/relay/transforms/combine_parallel_op.h' l='70'>/*
   * \brief Constructor
   * \param op The op that indicates the start of each group
   * \param fis_supported_op function that returns true if op
   *                         is supported for combining
   * \param fare_compatible_ops function that returns true if
   *                            two ops are compatible for combining
   */</doc>
<def f='tvm/relay/transforms/combine_parallel_op.cc' l='48' ll='52' type='void tvm::relay::BranchGroupFinder::BranchGroupFinder(const tvm::relay::Op &amp; op, tvm::relay::FIsSupportedOp fis_supported_op, tvm::relay::FAreCompatibleOps fare_compatible_ops)'/>
<use f='tvm/relay/transforms/combine_parallel_op.cc' l='117' u='c' c='_ZN3tvm5relay18ParallelOpCombiner7CombineERKNS_9RelayExprE'/>
