<def f='tvm/relay/analysis/type_solver.h' l='190' ll='201' type='tvm::relay::TypeSolver::TypeNode * tvm::relay::TypeSolver::GetTypeNode(const tvm::relay::Type &amp; t)'/>
<use f='tvm/relay/analysis/type_solver.cc' l='91' u='c' c='_ZN3tvm5relay10TypeSolver13OccursChecker10VisitType_EPKNS_18IncompleteTypeNodeE'/>
<use f='tvm/relay/analysis/type_solver.cc' l='109' u='c' c='_ZN3tvm5relay10TypeSolver7Unifier5UnifyERKNS_4TypeES5_bb'/>
<use f='tvm/relay/analysis/type_solver.cc' l='110' u='c' c='_ZN3tvm5relay10TypeSolver7Unifier5UnifyERKNS_4TypeES5_bb'/>
<use f='tvm/relay/analysis/type_solver.cc' l='141' u='c' c='_ZN3tvm5relay10TypeSolver7Unifier5UnifyERKNS_4TypeES5_bb'/>
<use f='tvm/relay/analysis/type_solver.cc' l='380' u='c' c='_ZN3tvm5relay10TypeSolver8Resolver10VisitType_EPKNS_18IncompleteTypeNodeE'/>
<use f='tvm/relay/analysis/type_solver.cc' l='400' u='c' c='_ZN3tvm5relay10TypeSolver10Propagator12UpdateRelSetERKNS_4TypeE'/>
<use f='tvm/relay/analysis/type_solver.cc' l='479' u='c' c='_ZN3tvm5relay10TypeSolver6Merger13TransferLinksERKNS_4TypeE'/>
<use f='tvm/relay/analysis/type_solver.cc' l='571' u='c' c='_ZN3tvm5relay10TypeSolver13AddConstraintERKNS_14TypeConstraintERKNS_4SpanE'/>
<doc f='tvm/relay/analysis/type_solver.h' l='185'>/*!
   * \brief GetTypeNode that is corresponds to t.
   * if it do not exist, create a new one.
   * \return The type node.
   */</doc>
