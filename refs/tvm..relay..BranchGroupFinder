<def f='tvm/relay/transforms/combine_parallel_op.h' l='68' ll='123'/>
<size>248</size>
<doc f='tvm/relay/transforms/combine_parallel_op.h' l='52'>/*
 * Class to find parallel branches starting with op that are
 * grouped if they are able to be combined. They are eligible to
 * be combined if they have the same input data.
 * Op can be followed by zero or more elemwise or broadcast ops,
 * which are included in the group.
 * Intermediate nodes have exactly one successor. It is possible that branches meet at a point,
 * which should be handled in ParallelOpCombiner.
 *
 *        data
 *       /    \
 *     op      op
 *     |        |
 * elem-wise elem-wise
 *     |        |
 */</doc>
<fun r='_ZN3tvm5relay17BranchGroupFinderC1ERKNS_2OpESt8functionIFbPKNS0_8CallNodeEEES5_IFbS8_S8_EE'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder4FindERKNS_9RelayExprE'/>
<mbr r='tvm::relay::BranchGroupFinder::cached_op_' o='512' t='const tvm::relay::Op &amp;'/>
<mbr r='tvm::relay::BranchGroupFinder::fis_supported_op_' o='576' t='tvm::relay::FIsSupportedOp'/>
<mbr r='tvm::relay::BranchGroupFinder::fare_compatible_ops_' o='832' t='tvm::relay::FAreCompatibleOps'/>
<mbr r='tvm::relay::BranchGroupFinder::op_roots_' o='1088' t='std::unordered_set&lt;Expr, ObjectPtrHash, ObjectPtrEqual&gt;'/>
<mbr r='tvm::relay::BranchGroupFinder::children_map_' o='1536' t='std::unordered_map&lt;Expr, std::vector&lt;const CallNode *&gt;, ObjectPtrHash, ObjectPtrEqual&gt;'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder12CreateBranchEPKNS0_8CallNodeE'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder10VisitExpr_EPKNS0_8CallNodeE'/>
<use f='tvm/relay/transforms/combine_parallel_op.cc' l='117' c='_ZN3tvm5relay18ParallelOpCombiner7CombineERKNS_9RelayExprE'/>
<size>248</size>
<fun r='_ZN3tvm5relay17BranchGroupFinderC1ERKNS_2OpESt8functionIFbPKNS0_8CallNodeEEES5_IFbS8_S8_EE'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder4FindERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder12CreateBranchEPKNS0_8CallNodeE'/>
<fun r='_ZN3tvm5relay17BranchGroupFinder10VisitExpr_EPKNS0_8CallNodeE'/>
