<dec f='tvm/src/relay/backend/utils.h' l='728' type='std::unordered_map&lt;Target, IRModule, TargetStrHash, TargetStrEqual&gt; tvm::relay::backend::TargetModuleMapToTargetStrModuleMap(Map&lt;tvm::Target, tvm::IRModule&gt; input_map)'/>
<doc f='tvm/src/relay/backend/utils.h' l='718'>/*!
 * \brief Convert a Map&lt;Target, IRModule&gt; to std::unordered_map&lt;Target, IRmodule, TargetStrHash,
 * TargetStrEqual&gt; Target equality is currently based on pointer equality, which is a problem since
 * we have a lot of Map&lt;Target, IRModule&gt; in the codebase. This function converts the map to a
 * version that is keyed based on string value of the Target instead. Note that once we remove
 * Map&lt;Target, IRModule&gt;, this function will be removed.
 * \param input_map The map to convert
 * \return The converted map
 */</doc>
<use f='tvm/src/relay/backend/interpreter.cc' l='394' u='c' c='_ZN3tvm5relay11Interpreter15TIRToPackedFuncERKNS_9GlobalVarERKNS_7runtime5ArrayIS2_vEENS_6TargetE'/>
<def f='tvm/src/relay/backend/utils.cc' l='286' ll='293' type='std::unordered_map&lt;Target, IRModule, TargetStrHash, TargetStrEqual&gt; tvm::relay::backend::TargetModuleMapToTargetStrModuleMap(Map&lt;tvm::Target, tvm::IRModule&gt; input_map)'/>
