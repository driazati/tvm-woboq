<dec f='include/c++/12/bits/stl_list.h' l='1525' type='std::list::iterator std::list::erase(std::list::const_iterator __position)'/>
<def f='include/c++/12/bits/list.tcc' l='148' ll='160' type='typename list&lt;_Tp, _Alloc&gt;::iterator std::list::erase(std::list::const_iterator __position)'/>
<doc f='include/c++/12/bits/stl_list.h' l='1508'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %list by one.
       *
       *  Due to the nature of a %list this operation can be done in
       *  constant time, and only invalidates iterators/references to
       *  the element being removed.  The user is also cautioned that
       *  this function only erases the element, and that if the element
       *  is itself a pointer, the pointed-to memory is not touched in
       *  any way.  Managing the pointer is the user&apos;s responsibility.
       */</doc>
<use f='tvm/src/tir/ir/buffer.cc' l='215' u='c' c='_ZN3tvm3tir11MergeMulModEPNS_5arith8AnalyzerERKNS_8PrimExprE'/>
<use f='tvm/src/tir/ir/buffer.cc' l='216' u='c' c='_ZN3tvm3tir11MergeMulModEPNS_5arith8AnalyzerERKNS_8PrimExprE'/>
<use f='tvm/src/tir/transforms/merge_dynamic_shared_memory_allocations.cc' l='561' u='c' c='_ZN3tvm3tir27DynamicSharedMemoryRewriter9FindAllocEPKNS0_12AllocateNodeE'/>
<use f='tvm/src/tir/transforms/storage_rewrite.cc' l='815' u='c' c='_ZN3tvm3tir19StoragePlanRewriter12PlanNewScopeEPKNS_7runtime6ObjectE'/>
<use f='tvm/src/tir/transforms/storage_rewrite.cc' l='990' u='c' c='_ZN3tvm3tir19StoragePlanRewriter9FindAllocEPKNS0_12AllocateNodeEPKNS_7runtime6ObjectERKNS5_12StorageScopeEm'/>
