<def f='tvm/include/tvm/topi/reduction.h' l='326' ll='329' type='tvm::te::Tensor tvm::topi::sum(const tvm::te::Tensor &amp; data, const Array&lt;tvm::Integer&gt; &amp; axis, bool keepdims = false, bool atleast1d = false)'/>
<use f='tvm/include/tvm/topi/nn.h' l='686' u='c' c='_ZN3tvm4topi8nll_lossERKNS_2te6TensorES4_S4_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSA_SA_'/>
<use f='tvm/include/tvm/topi/nn.h' l='686' u='c' c='_ZN3tvm4topi8nll_lossERKNS_2te6TensorES4_S4_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSA_SA_'/>
<use f='tvm/include/tvm/topi/nn.h' l='688' u='c' c='_ZN3tvm4topi8nll_lossERKNS_2te6TensorES4_S4_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSA_SA_'/>
<doc f='tvm/include/tvm/topi/reduction.h' l='313'>/*!
 * \brief Creates an operation that sums array elements over a given axis
 *
 * \param data The input tensor
 * \param axis The axis to sum over. If axis is empty, the operation will
 * sum over all elements of the array.
 * \param keepdims If this is set to true, the axes which are reduced are
 * left in the result as dimensions with size one. This enables the result
 * to broadcast correctly against the input array.
 * \param atleast1d Whether the output need to be atleast1d.
 *
 * \return A Tensor whose op member is the sum operation
 */</doc>
<use f='tvm/src/relay/op/tensor/reduce.cc' l='448' u='r' c='_ZN3tvm5relay10SumComputeERKNS_5AttrsERKNS_7runtime5ArrayINS_2te6TensorEvEERKNS_4TypeE'/>
<use f='tvm/src/relay/op/tensor/reduce.cc' l='625' u='r' c='_ZN3tvm5relay11MeanComputeERKNS_5AttrsERKNS_7runtime5ArrayINS_2te6TensorEvEERKNS_4TypeE'/>
<use f='tvm/src/relay/op/tensor/reduce.cc' l='708' u='c' c='_ZN3tvm5relay15VarianceComputeERKNS_5AttrsERKNS_7runtime5ArrayINS_2te6TensorEvEERKNS_4TypeE'/>
<use f='tvm/src/topi/reduction.cc' l='36' u='c'/>
