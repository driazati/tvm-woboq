<dec f='tvm/src/tir/analysis/control_flow_graph.h' l='268' type='bool tvm::tir::BufferState::IsEquivalentTo(const tvm::tir::BufferState &amp; other, arith::Analyzer * analyzer) const'/>
<def f='tvm/src/tir/analysis/control_flow_graph.cc' l='1292' ll='1304' type='bool tvm::tir::BufferState::IsEquivalentTo(const tvm::tir::BufferState &amp; other, tvm::arith::Analyzer * analyzer) const'/>
<use f='tvm/src/tir/analysis/control_flow_graph.cc' l='1453' u='c' c='_ZN3tvm3tir16ControlFlowGraph27ForwardPropagateKnownValuesEm'/>
<use f='tvm/src/tir/analysis/control_flow_graph.cc' l='1577' u='c' c='_ZN3tvm3tir16ControlFlowGraph29BackwardPropagateUnusedValuesEm'/>
<doc f='tvm/src/tir/analysis/control_flow_graph.h' l='260'>/*! \brief Check if two buffer states are equivalent
   *
   * \param other
   *
   * \param analyzer The analyzer used to check equality of PrimExpr
   *
   * \return True if the two states are provably equivalent, false otherwise.
   */</doc>
