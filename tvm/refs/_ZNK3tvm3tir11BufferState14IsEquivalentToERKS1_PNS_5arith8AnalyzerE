<dec f='tvm/src/tir/analysis/control_flow_graph.h' l='269' type='bool tvm::tir::BufferState::IsEquivalentTo(const tvm::tir::BufferState &amp; other, arith::Analyzer * analyzer) const'/>
<def f='tvm/src/tir/analysis/control_flow_graph.cc' l='1313' ll='1325' type='bool tvm::tir::BufferState::IsEquivalentTo(const tvm::tir::BufferState &amp; other, tvm::arith::Analyzer * analyzer) const'/>
<use f='tvm/src/tir/analysis/control_flow_graph.cc' l='1479' u='c' c='_ZN3tvm3tir16ControlFlowGraph27ForwardPropagateKnownValuesESt8optionalImE'/>
<use f='tvm/src/tir/analysis/control_flow_graph.cc' l='1609' u='c' c='_ZN3tvm3tir16ControlFlowGraph29BackwardPropagateUnusedValuesESt8optionalImE'/>
<doc f='tvm/src/tir/analysis/control_flow_graph.h' l='261'>/*! \brief Check if two buffer states are equivalent
   *
   * \param other
   *
   * \param analyzer The analyzer used to check equality of PrimExpr
   *
   * \return True if the two states are provably equivalent, false otherwise.
   */</doc>
