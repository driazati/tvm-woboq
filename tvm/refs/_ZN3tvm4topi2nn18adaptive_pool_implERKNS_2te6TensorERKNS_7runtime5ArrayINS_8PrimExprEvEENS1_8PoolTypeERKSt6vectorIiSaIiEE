<def f='tvm/include/tvm/topi/nn/pooling.h' l='322' ll='399' type='tvm::te::Tensor tvm::topi::nn::adaptive_pool_impl(const tvm::te::Tensor &amp; x, const Array&lt;tvm::PrimExpr&gt; &amp; output_size, tvm::topi::nn::PoolType pool_type, const std::vector&lt;int&gt; &amp; axes)'/>
<use f='tvm/include/tvm/topi/nn/pooling.h' l='431' u='c' c='_ZN3tvm4topi2nn13adaptive_poolERKNS_2te6TensorERKNS_7runtime5ArrayINS_8PrimExprEvEENS1_8PoolTypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='tvm/include/tvm/topi/nn/pooling.h' l='447' u='c' c='_ZN3tvm4topi2nn15adaptive_pool3dERKNS_2te6TensorERKNS_7runtime5ArrayINS_8PrimExprEvEENS1_8PoolTypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<use f='tvm/include/tvm/topi/nn/pooling.h' l='462' u='c' c='_ZN3tvm4topi2nn15adaptive_pool1dERKNS_2te6TensorERKNS_7runtime5ArrayINS_8PrimExprEvEENS1_8PoolTypeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='tvm/include/tvm/topi/nn/pooling.h' l='312'>/*!
 * \brief Perform adaptive pooling on N dimensional data
 *
 * \param x The input tensor
 * \param output_size int vector of size in each dimension
 * \param pool_type The type of pooling operator
 * \param axes indices of each dimension
 *
 * \return The output tensor in same layout order
 */</doc>
