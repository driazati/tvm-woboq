<def f='tvm/src/relay/backend/utils.h' l='583' ll='605' type='const tvm::relay::CallNode * tvm::relay::backend::GetRootCall(const tvm::relay::CallNode * current_call, int max_depth, const std::string &amp; op_name)'/>
<use f='tvm/src/relay/backend/utils.h' l='604' u='c' c='_ZN3tvm5relay7backend11GetRootCallEPKNS0_8CallNodeEiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE'/>
<doc f='tvm/src/relay/backend/utils.h' l='575'>/*!
 * \brief Retrieve the expected &quot;root&quot; op nested inside a fused call, such as conv2d in
 *        relu(add(conv2d))
 * \param call A Relay call node. Typically nn.relu when called the first time.
 * \param max_depth The maximum number of calls before the root op, counting from current_call.
 * \param op_name The name of expected &quot;root&quot; op in this fused call.
 * \return A CallNode corresponding to the root op
 */</doc>
