<dec f='tvm/include/tvm/tir/schedule/schedule.h' l='492' type='tvm::tir::BlockRV tvm::tir::ScheduleNode::DecomposeReduction(const tvm::tir::BlockRV &amp; block_rv, const tvm::tir::LoopRV &amp; loop_rv)'/>
<doc f='tvm/include/tvm/tir/schedule/schedule.h' l='477'>/*!
   * \brief Decompose a reduction block into two separate blocks.
   * a) The init block, which is translated from the init statement of the reduction block;
   * b) The update block, which is the original block without init statement.
   *
   * The init block is inserted right before the given loop.
   *
   * The schedule primitive requires:
   * 1) The input block is a reduction block.
   * 2) The input loop is the ancestor of the block.
   * 3) The input loop is not lower than all the loops related to reduce block var.
   * \param block_rv The reduction block to be decomposed
   * \param loop_rv The loop above which the init block is inserted before.
   * \return The init block
   */</doc>
<use f='tvm/src/meta_schedule/postproc/rewrite_reduction_block.cc' l='137' u='c' c='_ZN3tvm13meta_schedule25RewriteReductionBlockNode5ApplyERKNS_3tir8ScheduleE'/>
<ovr f='tvm/src/tir/schedule/concrete_schedule.cc' l='641' c='_ZN3tvm3tir20ConcreteScheduleNode18DecomposeReductionERKNS0_7BlockRVERKNS0_6LoopRVE'/>
<use f='tvm/src/tir/schedule/primitive/reduction.cc' l='1120' u='c' c='_ZN3tvm3tir24DecomposeReductionTraits23UnpackedApplyToScheduleENS0_8ScheduleENS0_7BlockRVENS0_6LoopRVE'/>
<use f='tvm/src/tir/schedule/schedule.cc' l='198' u='a'/>
