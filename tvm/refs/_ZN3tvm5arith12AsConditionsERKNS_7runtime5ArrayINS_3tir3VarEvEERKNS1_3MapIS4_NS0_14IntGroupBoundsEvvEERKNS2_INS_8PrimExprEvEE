<dec f='tvm/include/tvm/arith/int_solver.h' l='330' type='Array&lt;tvm::PrimExpr&gt; tvm::arith::AsConditions(const Array&lt;tvm::tir::Var&gt; &amp; variables, const Map&lt;tvm::tir::Var, tvm::arith::IntGroupBounds&gt; &amp; bounds, const Array&lt;tvm::PrimExpr&gt; &amp; relations)'/>
<def f='tvm/src/arith/int_constraints.cc' l='41' ll='65' type='Array&lt;tvm::PrimExpr&gt; tvm::arith::AsConditions(const Array&lt;tvm::tir::Var&gt; &amp; variables, const Map&lt;tvm::tir::Var, tvm::arith::IntGroupBounds&gt; &amp; bounds, const Array&lt;tvm::PrimExpr&gt; &amp; relations)'/>
<doc f='tvm/include/tvm/arith/int_solver.h' l='323'>/*!
 * \brief Combine the information into an array of (in)equalities.
 * \param variables The variables in \p bounds.
 *        It is used to determine the iteration order to avoid indeterministic results.
 * \param bounds grouped boundary of the variables.
 * \param relations other relations.
 */</doc>
<use f='tvm/src/arith/solve_linear_inequality.cc' l='425' u='c' c='_ZN3tvm5arith24SolveInequalitiesToRangeERKNS0_14IntConstraintsE'/>
<use f='tvm/src/arith/solve_linear_inequality.cc' l='521' u='c' c='_ZN3tvm5arith28SolveInequalitiesDeskewRangeERKNS0_14IntConstraintsE'/>
<use f='tvm/src/arith/solve_linear_inequality.cc' l='552' u='c'/>
<use f='tvm/src/te/autodiff/ad_simplify.cc' l='866' u='c' c='_ZN3tvm2te30LiftConditionsThroughReductionERKNS_8PrimExprERKNS_7runtime5ArrayINS_3tir7IterVarEvEESA_'/>
