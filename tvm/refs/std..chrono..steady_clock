<def f='include/c++/12/bits/chrono.h' l='1150' ll='1161'/>
<use f='include/c++/12/bits/chrono.h' l='1155'/>
<use f='include/c++/12/mutex' l='144' c='_ZNSt18__timed_mutex_impl15_M_try_lock_forERKNSt6chrono8durationITL0__TL0_0_EE'/>
<use f='include/c++/12/mutex' l='174' c='_ZNSt18__timed_mutex_impl17_M_try_lock_untilERKNSt6chrono10time_pointINS0_3_V212steady_clockETL0__EE'/>
<size>1</size>
<doc f='include/c++/12/bits/chrono.h' l='1144'>/**
     *  @brief Monotonic clock
     *
     *  Time returned has the property of only increasing at a uniform rate.
     *  @ingroup chrono
    */</doc>
<smbr r='std::chrono::steady_clock::is_steady' t='const bool'/>
<fun r='_ZNSt6chrono3_V212steady_clock3nowEv'/>
<use f='include/c++/12/condition_variable' l='69'/>
<use f='include/c++/12/condition_variable' l='244'/>
<use f='include/c++/12/bits/atomic_futex.h' l='73'/>
<use f='include/c++/12/bits/atomic_futex.h' l='184' c='_ZNSt23__atomic_futex_unsigned27_M_load_and_test_until_implEjjbSt12memory_orderRKNSt6chrono10time_pointINS1_3_V212steady_clockETL0__EE'/>
<use f='include/c++/12/bits/atomic_futex.h' l='263' c='_ZNSt23__atomic_futex_unsigned24_M_load_when_equal_untilEjSt12memory_orderRKNSt6chrono10time_pointINS1_3_V212steady_clockETL0__EE'/>
<size>1</size>
<use f='tvm/src/ir/instrument.cc' l='205'/>
<size>1</size>
<use f='include/c++/12/shared_mutex' l='459'/>
<use f='include/c++/12/shared_mutex' l='534' c='_ZNSt18shared_timed_mutex14try_lock_untilERKNSt6chrono10time_pointINS0_3_V212steady_clockET_EE'/>
<use f='include/c++/12/shared_mutex' l='621' c='_ZNSt18shared_timed_mutex21try_lock_shared_untilERKNSt6chrono10time_pointINS0_3_V212steady_clockET_EE'/>
<size>1</size>
