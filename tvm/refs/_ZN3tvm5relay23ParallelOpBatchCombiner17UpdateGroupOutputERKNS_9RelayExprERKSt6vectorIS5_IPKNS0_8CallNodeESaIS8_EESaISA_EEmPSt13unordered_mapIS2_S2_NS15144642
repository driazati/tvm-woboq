<dec f='tvm/src/relay/transforms/combine_parallel_op_batch.h' l='131' type='void tvm::relay::ParallelOpBatchCombiner::UpdateGroupOutput(const tvm::relay::Expr &amp; data, const tvm::relay::Group &amp; branches, size_t depth, tvm::relay::ExprSubstMap * subst_map)'/>
<doc f='tvm/src/relay/transforms/combine_parallel_op_batch.h' l='123'>/*
   * \brief Updates map of expr to substitute with combined expr. This usually involves
   *        slicing or splitting data.
   * \param data combined op
   * \param branches branches of parallel ops to be combined
   * \param depth depth at which to substitute
   * \param subst_map map of Expr to replace with Expr to replace it with
   */</doc>
<inh f='tvm/src/relay/transforms/combine_parallel_op.h' l='203' c='_ZN3tvm5relay18ParallelOpCombiner17UpdateGroupOutputERKNS_9RelayExprERKSt6vectorIS5_IPKNS0_8CallNodeESaIS8_EESaISA_EEmPSt13unordered_mapIS2_S2_NS_7run12190914'/>
<def f='tvm/src/relay/transforms/combine_parallel_op_batch.cc' l='159' ll='168' type='void tvm::relay::ParallelOpBatchCombiner::UpdateGroupOutput(const tvm::relay::Expr &amp; data, const tvm::relay::Group &amp; branches, size_t depth, tvm::relay::ExprSubstMap * subst_map)'/>
