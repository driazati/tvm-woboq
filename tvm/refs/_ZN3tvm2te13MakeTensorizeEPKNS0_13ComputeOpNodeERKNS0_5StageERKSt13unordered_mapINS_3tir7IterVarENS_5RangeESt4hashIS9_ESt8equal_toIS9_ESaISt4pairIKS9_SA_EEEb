<dec f='tvm/src/te/operation/compute_op.h' l='87' type='tvm::tir::Stmt tvm::te::MakeTensorize(const tvm::te::ComputeOpNode * self, const tvm::te::Stage &amp; stage, const std::unordered_map&lt;IterVar, Range&gt; &amp; dom_map, bool debug_keep_trivial_loop)'/>
<use f='tvm/src/te/operation/compute_op.cc' l='432' u='c' c='_ZNK3tvm2te13ComputeOpNode12BuildProvideERKNS0_5StageERKSt13unordered_mapINS_3tir7IterVarENS_5RangeESt4hashIS7_ESt8equal_toIS7_ESaISt4pairIKS7_S8_EEEb'/>
<doc f='tvm/src/te/operation/compute_op.h' l='79'>/*!
 * \brief Build body of compute for tensorization.
 * \param self The pointer to ComputeOpNode
 * \param stage The schedule stage.
 * \param dom_map The domain map.
 * \param debug_keep_trivial_loop Whether keep trivial loops with extent of 1
 * \return The created statement.
 */</doc>
<def f='tvm/src/te/operation/tensorize.cc' l='345' ll='472' type='tvm::tir::Stmt tvm::te::MakeTensorize(const tvm::te::ComputeOpNode * self, const tvm::te::Stage &amp; stage, const std::unordered_map&lt;IterVar, Range&gt; &amp; dom_map, bool debug_keep_trivial_loop)'/>
