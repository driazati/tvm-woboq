<dec f='tvm/src/relay/transforms/pass_utils.h' l='223' type='std::pair&lt;NodeScopeMap, ExprSet&gt; tvm::relay::CalcScope(const tvm::relay::DependencyGraph &amp; dg)'/>
<doc f='tvm/src/relay/transforms/pass_utils.h' l='217'>/*! \brief Calculate the scope of nodes in the dependency graph by least common ancestor.
 *
 *  \param dg the input dependency graph
 *  \param expr_scope the output node -&gt; scope mapping for all nodes.
 *  \param lifted_exprs the output set of expressions whose scope is lifted due to dependency
 */</doc>
<def f='tvm/src/relay/transforms/to_a_normal_form.cc' l='55' ll='97' type='std::pair&lt;NodeScopeMap, ExprSet&gt; tvm::relay::CalcScope(const tvm::relay::DependencyGraph &amp; dg)'/>
<use f='tvm/src/relay/transforms/to_a_normal_form.cc' l='423' u='c' c='_ZN3tvm5relay25ToBasicBlockNormalFormAuxERKNS_9RelayExprE'/>
<use f='tvm/src/relay/transforms/to_a_normal_form.cc' l='451' u='c' c='_ZN3tvm5relay9transform13ToANormalFormERKNS_9RelayExprE'/>
<use f='tvm/src/relay/transforms/to_basic_block_normal_form.cc' l='69' u='c' c='_ZN3tvm5relay25BasicBlockNormalFormCheckERKNS_9RelayExprE'/>
