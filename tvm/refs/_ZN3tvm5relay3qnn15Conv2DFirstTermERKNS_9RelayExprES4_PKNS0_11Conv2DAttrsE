<def f='tvm/src/relay/qnn/op/convolution.cc' l='425' ll='431' type='tvm::relay::Expr tvm::relay::qnn::Conv2DFirstTerm(const tvm::relay::Expr &amp; padded_data, const tvm::relay::Expr &amp; weight, const tvm::relay::Conv2DAttrs * param)'/>
<use f='tvm/src/relay/qnn/op/convolution.cc' l='780' u='c' c='_ZN3tvm5relay3qnn21QnnConv2DCanonicalizeERKNS_5AttrsERKNS_7runtime5ArrayINS_9RelayExprEvEERKNS6_INS_4TypeEvEE'/>
<use f='tvm/src/relay/qnn/op/convolution.cc' l='797' u='c' c='_ZN3tvm5relay3qnn21QnnConv2DCanonicalizeERKNS_5AttrsERKNS_7runtime5ArrayINS_9RelayExprEvEERKNS6_INS_4TypeEvEE'/>
<doc f='tvm/src/relay/qnn/op/convolution.cc' l='415'>/*
 * \brief Calculates the first term in the qnn.conv2d lowering sequence.
 * \param data The input expr.
 * \param weight The weight expr.
 * \param param The qnn conv2d attributes.
 * \return The sequence of Relay operators for term1.
 * \note The term1 is
 *       Sigma(c,r,s) QW(k, c, r, s) * QA(n, c, h + r, w + s)
 *       This is just conv2d on int tensors.
 */</doc>
