<dec f='tvm/src/arith/rewrite_simplify.h' l='110' type='tvm::arith::CompareResult tvm::arith::RewriteSimplifier::Impl::TryCompare(const tvm::PrimExpr &amp; x, int64_t val)'/>
<use f='tvm/src/arith/rewrite_simplify.h' l='149' u='c' c='_ZN3tvm5arith17RewriteSimplifier4Impl13CanProveEqualERKNS_8PrimExprEl'/>
<use f='tvm/src/arith/canonical_simplify.cc' l='894' u='c' c='_ZN3tvm5arith19CanonicalSimplifier4Impl10VisitExpr_EPKNS_3tir7DivNodeE'/>
<use f='tvm/src/arith/canonical_simplify.cc' l='948' u='c' c='_ZN3tvm5arith19CanonicalSimplifier4Impl10VisitExpr_EPKNS_3tir12FloorDivNodeE'/>
<use f='tvm/src/arith/canonical_simplify.cc' l='1056' u='c' c='_ZN3tvm5arith19CanonicalSimplifier4Impl10VisitExpr_EPKNS_3tir7ModNodeE'/>
<use f='tvm/src/arith/canonical_simplify.cc' l='1117' u='c' c='_ZN3tvm5arith19CanonicalSimplifier4Impl10VisitExpr_EPKNS_3tir12FloorModNodeE'/>
<doc f='tvm/src/arith/rewrite_simplify.h' l='104'>/*!
   * \brief try to compare x against val.
   * \param x The expression to be evaluated.
   * \param val The constant value.
   * \return comparison result.
   */</doc>
<use f='tvm/src/arith/rewrite_simplify.cc' l='95' u='c' c='_ZN3tvm5arith17RewriteSimplifier4Impl29TryCompareUsingConstIntBoundsERKNS_8PrimExprES3_'/>
<def f='tvm/src/arith/rewrite_simplify.cc' l='104' ll='138' type='tvm::arith::CompareResult tvm::arith::RewriteSimplifier::Impl::TryCompare(const tvm::PrimExpr &amp; x, int64_t val)'/>
<doc f='tvm/src/arith/rewrite_simplify.cc' l='103'>// try to prove x equals val</doc>
