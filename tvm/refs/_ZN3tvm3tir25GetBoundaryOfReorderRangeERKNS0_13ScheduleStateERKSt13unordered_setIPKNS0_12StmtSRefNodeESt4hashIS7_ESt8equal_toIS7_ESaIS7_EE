<def f='tvm/src/tir/schedule/primitive/loop_transformation.cc' l='571' ll='613' type='std::pair&lt;const StmtSRefNode *, const StmtSRefNode *&gt; tvm::tir::GetBoundaryOfReorderRange(const tvm::tir::ScheduleState &amp; self, const std::unordered_set&lt;const StmtSRefNode *&gt; &amp; loop_srefs)'/>
<use f='tvm/src/tir/schedule/primitive/loop_transformation.cc' l='709' u='c' c='_ZN3tvm3tir7ReorderENS0_13ScheduleStateERKNS_7runtime5ArrayINS0_8StmtSRefEvEE'/>
<doc f='tvm/src/tir/schedule/primitive/loop_transformation.cc' l='564'>/*!
 * \brief Get the top and bottom boundary of reorder range (which should be a chain)
 * \param self The schedule state
 * \param loop_srefs The set containing the srefs to the loops to be reordered
 * \return A pair containing the top and bottom boundary of the reorder range
 * \throws ScheduleError If the loops to be reordered is not in a chain
 */</doc>
