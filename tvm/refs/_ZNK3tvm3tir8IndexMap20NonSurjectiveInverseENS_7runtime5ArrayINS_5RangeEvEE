<dec f='tvm/include/tvm/tir/index_map.h' l='189' type='std::pair&lt;IndexMap, PrimExpr&gt; tvm::tir::IndexMap::NonSurjectiveInverse(Array&lt;tvm::Range&gt; initial_ranges) const'/>
<doc f='tvm/include/tvm/tir/index_map.h' l='180'>/*! \brief Generate the inverse mapping.
   *
   * Determine the inverse, where the output range may contain
   * addresses that do not correspond to an address in the input
   * range.
   *
   * \return The inverted index map, along with the predicate for
   * which the inverse maps to a valid range.
   */</doc>
<def f='tvm/src/tir/ir/index_map.cc' l='53' ll='114' type='std::pair&lt;IndexMap, PrimExpr&gt; tvm::tir::IndexMap::NonSurjectiveInverse(Array&lt;tvm::Range&gt; initial_ranges) const'/>
<use f='tvm/src/tir/ir/index_map.cc' l='292' u='c'/>
