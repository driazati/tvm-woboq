<def f='tvm/src/relay/qnn/op/convolution.cc' l='345' ll='377' type='tvm::relay::Expr tvm::relay::qnn::DepthwiseConv2DThirdTerm(const tvm::relay::Expr &amp; weight, const tvm::relay::Expr &amp; input_zero_point, const tvm::relay::Conv2DAttrs * param, int out_channels, int channel_multiplier)'/>
<use f='tvm/src/relay/qnn/op/convolution.cc' l='784' u='c' c='_ZN3tvm5relay3qnn21QnnConv2DCanonicalizeERKNS_5AttrsERKNS_7runtime5ArrayINS_9RelayExprEvEERKNS6_INS_4TypeEvEE'/>
<doc f='tvm/src/relay/qnn/op/convolution.cc' l='330'>/*
 * \brief Calculates the third term in the qnn.conv2d depthwise lowering sequence.
 * \param weight The weight expr.
 * \param input_zero_point The input zero point expr.
 * \param param The qnn conv2d attributes.
 * \param out_channels The number of output channels.
 * \param channel_multiplier The channel/depth multiplier.
 * \return The sequence of Relay operatos for term3.
 * \note The term3 looks like this
 *
 *       Sigma(r, s) zp_a * Qw(oc/m, oc%m, r, s)
 *
 *       This can be achieved by calling reduce on r and s axis. The tensor can be then reshaped to
 *       (1, oc, 1, 1) as (oc/m, oc%m) are just contiguous memory locations.
 */</doc>
