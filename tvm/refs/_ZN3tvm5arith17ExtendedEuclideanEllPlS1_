<def f='tvm/src/arith/int_operator.h' l='129' ll='163' type='int64_t tvm::arith::ExtendedEuclidean(int64_t a, int64_t b, int64_t * x, int64_t * y)'/>
<use f='tvm/src/arith/int_operator.h' l='193' u='c' c='_ZN3tvm5arith19LeastCommonMultipleEll'/>
<doc f='tvm/src/arith/int_operator.h' l='121'>/*!
 * \brief Use Extended Euclidean algorithm to solve ax + by = gcd(a, b)
 * \param a The first coefficient.
 * \param b The second coefficient.
 * \param x The solution of x.
 * \param y The solution of y.
 * \return The GCD of a and b.
 */</doc>
<use f='tvm/src/arith/modular_set.cc' l='358' u='c' c='_ZN3tvm5arith18ModularSetAnalyzer4Impl9IntersectENS1_5EntryES3_'/>
<use f='tvm/src/arith/solve_linear_equation.cc' l='100' u='c' c='_ZN3tvm5arith19SmithNormalFormDiagEPSt6vectorIS1_IlSaIlEESaIS3_EES6_PS1_INS_8PrimExprESaIS7_EESA_'/>
<use f='tvm/src/arith/solve_linear_equation.cc' l='153' u='c' c='_ZN3tvm5arith19SmithNormalFormDiagEPSt6vectorIS1_IlSaIlEESaIS3_EES6_PS1_INS_8PrimExprESaIS7_EESA_'/>
<use f='tvm/src/arith/solve_linear_inequality.cc' l='247' u='c' c='_ZN3tvm5arith23SolveLinearInequalitiesERKNS0_14IntConstraintsE'/>
