<dec f='tvm/src/target/llvm/codegen_llvm.h' l='338' type='void tvm::codegen::CodeGenLLVM::BufferAccessHelper(tvm::tir::Buffer buffer, Array&lt;tvm::PrimExpr&gt; indices, tvm::DataType value_dtype, std::function&lt;llvm::Instruction *(TypedPointer, int, int, bool)&gt; make_instruction)'/>
<doc f='tvm/src/target/llvm/codegen_llvm.h' l='314'>/* \brief Helper function for handling buffer access
   *
   * \param buffer The buffer being accessed
   *
   * \param indices The indices at which the buffer is being accessed.
   *
   * \param value_dtype The datatype to be read from (BufferLoad) or
   * written to (BufferStore) the buffer.
   *
   * \param make_instruction A callback function that generates that
   * actual call.
   *
   *       - buffer_ptr: A typed pointer to the element being accessed
   *
   *       - subelement_i: The index of a vectorized type to be
   *         stored/loaded.  If -1, indicates that the entire type,
   *         vector or scalar, should be written.
   *
   *       - alignment: The alignment to be used for the read/write.
   *
   *       - is_volatile: Whether the read/write should be volatile.
   *
   *       - Should return the generated expression.
   */</doc>
<def f='tvm/src/target/llvm/codegen_llvm.cc' l='1575' ll='1663' type='void tvm::codegen::CodeGenLLVM::BufferAccessHelper(tvm::tir::Buffer buffer, Array&lt;tvm::PrimExpr&gt; indices, tvm::DataType value_dtype, std::function&lt;llvm::Instruction *(TypedPointer, int, int, bool)&gt; make_instruction)'/>
<use f='tvm/src/target/llvm/codegen_llvm.cc' l='1689' u='c' c='_ZN3tvm7codegen11CodeGenLLVM10VisitExpr_EPKNS_3tir14BufferLoadNodeE'/>
<use f='tvm/src/target/llvm/codegen_llvm.cc' l='1792' u='c' c='_ZN3tvm7codegen11CodeGenLLVM10VisitStmt_EPKNS_3tir15BufferStoreNodeE'/>
