<inh f='tvm/include/tvm/tir/stmt_functor.h' l='300' c='tvm::tir::StmtExprVisitor'/>
<def f='tvm/src/tir/transforms/storage_rewrite.cc' l='63' ll='241'/>
<use f='tvm/src/tir/transforms/storage_rewrite.cc' l='406' c='_ZN3tvm3tir19StoragePlanRewriter7RewriteENS0_4StmtEb'/>
<size>128</size>
<doc f='tvm/src/tir/transforms/storage_rewrite.cc' l='49'>// Find a linear pattern of storage access
// Used for liveness analysis.
// Composite scopes(loop/thread_launch/IfThen) is represented by two points:
// before_scope -&gt; scope_body -&gt; after_scope
//
// The linear_seq_ stores before_scope and after_scope.
// The access to the arrays are stored at the after_scope point.
//
// Define &quot;scope&quot; as the body of For/thread_launch/IfThenElse
// This pass tries to detect last point that we need to keep memory
// alive under the same scope as allocate.
// The storage need to be kept alive between allocate and last access.
// The free point is only inserted at the same scope of allocate.
//</doc>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_12AllocateNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_9StoreNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_15BufferStoreNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitExpr_EPKNS0_8LoadNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitExpr_EPKNS0_14BufferLoadNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_12EvaluateNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitExpr_EPKNS0_8CallNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitExpr_EPKNS0_7VarNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_12AttrStmtNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_14IfThenElseNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_7ForNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_9WhileNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_14AssertStmtNodeE'/>
<fun r='_ZN3tvm3tir25LinearAccessPatternFinder10VisitStmt_EPKNS0_11LetStmtNodeE'/>
