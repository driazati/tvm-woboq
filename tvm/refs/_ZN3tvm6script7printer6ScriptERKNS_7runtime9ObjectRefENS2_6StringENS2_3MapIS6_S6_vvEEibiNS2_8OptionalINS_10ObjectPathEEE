<dec f='tvm/include/tvm/script/printer.h' l='42' type='tvm::runtime::String tvm::script::printer::Script(const tvm::runtime::ObjectRef &amp; root_node, tvm::runtime::String ir_name, Map&lt;tvm::runtime::String, tvm::runtime::String&gt; ir_prefix, int indent_spaces = 4, bool print_line_numbers = false, int num_context_lines = -1, Optional&lt;tvm::ObjectPath&gt; path_to_underline = NullOpt)'/>
<def f='tvm/src/script/printer.cc' l='31' ll='48' type='tvm::runtime::String tvm::script::printer::Script(const tvm::runtime::ObjectRef &amp; root_node, tvm::runtime::String ir_name, Map&lt;tvm::runtime::String, tvm::runtime::String&gt; ir_prefix, int indent_spaces = 4, bool print_line_numbers = false, int num_context_lines = -1, Optional&lt;tvm::ObjectPath&gt; path_to_underline = NullOpt)'/>
<use f='tvm/src/script/printer.cc' l='50' u='a'/>
<doc f='tvm/src/script/printer.cc' l='31'>//</doc>
<doc f='tvm/include/tvm/script/printer.h' l='29'>/*!
 * \brief Print IR graph as TVMScript code
 *
 * \param root_node The root node to print.
 * \param ir_name The dispatch token of the target IR, e.g., &quot;tir&quot;, &quot;relax&quot;.
 * \param ir_prefix The symbol name for TVMScript IR namespaces. For example, {&quot;tir&quot;: &quot;T&quot;}.
 * \param indent_spaces Number of spaces used for indentation
 * \param print_line_numbers Whether to print line numbers
 * \param num_context_lines Number of context lines to print around the underlined text
 * \param path_to_underline Object path to be underlined
 *
 * \return the TVMScript code as string.
 */</doc>
<doc f='tvm/include/tvm/script/printer.h' l='42'>//</doc>
