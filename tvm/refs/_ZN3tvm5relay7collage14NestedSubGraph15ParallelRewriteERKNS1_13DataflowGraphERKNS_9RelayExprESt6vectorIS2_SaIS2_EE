<dec f='tvm/src/relay/collage/sub_graph.h' l='171' type='static tvm::relay::Expr tvm::relay::collage::NestedSubGraph::ParallelRewrite(const tvm::relay::collage::DataflowGraph &amp; dataflow_graph, const tvm::relay::Expr &amp; expr, std::vector&lt;NestedSubGraph&gt; nested_sub_graphs)'/>
<doc f='tvm/src/relay/collage/sub_graph.h' l='163'>/*!
   * \brief Returns \p expr rewritten according to all the given nested sub-graphs. The
   * nested sub-graphs can be given in any order, but must be disjoint.
   *
   * It is valid for \p expr to not be the same as \p dataflow_graph.expr(), however all nodes
   * inside the nested sub-graphs must correspond to nodes shared between \p dataflow_graph.expr()
   * and \p expr. See \p SubGraph::ParallelRewrite below.
   */</doc>
<use f='tvm/src/relay/collage/sub_graph.cc' l='131' u='c' c='_ZN3tvm5relay7collage12_GLOBAL__N_19Extractor7ExtractEv'/>
<def f='tvm/src/relay/collage/sub_graph.cc' l='570' ll='583' type='static tvm::relay::Expr tvm::relay::collage::NestedSubGraph::ParallelRewrite(const tvm::relay::collage::DataflowGraph &amp; dataflow_graph, const tvm::relay::Expr &amp; expr, std::vector&lt;NestedSubGraph&gt; nested_sub_graphs)'/>
<doc f='tvm/src/relay/collage/sub_graph.cc' l='569'>/*static*/</doc>
