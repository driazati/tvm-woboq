<def f='tvm/src/tir/schedule/primitive/reduction.cc' l='539' ll='636'/>
<ovr f='tvm/src/tir/schedule/primitive/reduction.cc' l='660' c='tvm::tir::RFactorBlockCreator'/>
<use f='tvm/src/tir/schedule/primitive/reduction.cc' l='660'/>
<use f='tvm/src/tir/schedule/primitive/reduction.cc' l='667' c='_ZN3tvm3tir19RFactorBlockCreatorC1ENS0_12BlockRealizeENS0_3ForENS0_11BufferStoreENS0_11CommReducerENS0_6BufferESt13unordered_mapIPKNS0_7VarNodeES3_St44315548'/>
<ovr f='tvm/src/tir/schedule/primitive/reduction.cc' l='786' c='tvm::tir::WriteBackBlockCreator'/>
<use f='tvm/src/tir/schedule/primitive/reduction.cc' l='786'/>
<use f='tvm/src/tir/schedule/primitive/reduction.cc' l='792' c='_ZN3tvm3tir21WriteBackBlockCreatorC1ENS0_12BlockRealizeENS0_3ForENS0_11BufferStoreENS0_11CommReducerENS0_6BufferENS0_7IterVarENS_8PrimExprENS_7runtime5ArrayIS8_vEE'/>
<size>168</size>
<doc f='tvm/src/tir/schedule/primitive/reduction.cc' l='531'>/*!
 * \brief The base class of the rfactor/write-back block creator, which creates the blocks in four
 * steps:
 * 1) Create the new block iters and the their iter bindings
 * 2) Create the reduction update of the new block
 * 3) Create the read/write regions of the new block
 * 4) Create the new block and the new block-realize
 */</doc>
<fun r='_ZN3tvm3tir16BaseBlockCreator20CreateAdditionalIterEv'/>
<fun r='_ZN3tvm3tir16BaseBlockCreator17CreateNormalItersEi'/>
<fun r='_ZN3tvm3tir16BaseBlockCreator21CreateReductionUpdateEb'/>
<fun r='_ZN3tvm3tir16BaseBlockCreator22CreateReadWriteRegionsEv'/>
