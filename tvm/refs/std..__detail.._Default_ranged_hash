<def f='include/c++/12/bits/hashtable_policy.h' l='494'/>
<use f='include/c++/12/bits/unordered_map.h' l='52'/>
<use f='include/c++/12/bits/unordered_map.h' l='69'/>
<use f='include/c++/12/bits/unordered_set.h' l='50'/>
<use f='include/c++/12/bits/unordered_set.h' l='66'/>
<size>1</size>
<doc f='include/c++/12/bits/hashtable_policy.h' l='489'>/// Default ranged hash function H.  In principle it should be a
  /// function object composed from objects of type H1 and H2 such that
  /// h(k, N) = h2(h1(k), N), but that would mean making extra copies of
  /// h1 and h2.  So instead we&apos;ll just use a tag to tell class template
  /// hashtable to do that composition.</doc>
