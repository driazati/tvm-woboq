<dec f='tvm/src/tir/transforms/common_subexpr_elim_tools.h' l='81' type='static tvm::tir::ComputationTable tvm::tir::ComputationsDoneBy::GetComputationsDoneBy(const tvm::PrimExpr &amp; expr, std::function&lt;bool (const PrimExpr &amp;)&gt; is_eligible_computation, std::function&lt;bool (const PrimExpr &amp;)&gt; can_contain_computations)'/>
<use f='tvm/src/tir/transforms/common_subexpr_elim.cc' l='236' u='c' c='_ZN3tvm3tir29CommonSubexpressionEliminator9VisitExprERKNS_8PrimExprE'/>
<doc f='tvm/src/tir/transforms/common_subexpr_elim_tools.h' l='80'>// Toplevel (static) methods</doc>
<def f='tvm/src/tir/transforms/common_subexpr_elim_tools.cc' l='264' ll='294' type='static tvm::tir::ComputationTable tvm::tir::ComputationsDoneBy::GetComputationsDoneBy(const tvm::PrimExpr &amp; expr, std::function&lt;bool (const PrimExpr &amp;)&gt; is_eligible_computation, std::function&lt;bool (const PrimExpr &amp;)&gt; can_contain_computations)'/>
<doc f='tvm/src/tir/transforms/common_subexpr_elim_tools.cc' l='256'>/*!
 * \brief Toplevel (static) method for a PrimExpr
 * \param expr The expr for which we want to know the computations done
 * \param is_eligible_computation The predicate which decides if an expression is eligible for
                                  being introduced in a new variable
 * \param can_contain_computations The predicate which decides if an expression can contain an
                                    eligible computation
 */</doc>
