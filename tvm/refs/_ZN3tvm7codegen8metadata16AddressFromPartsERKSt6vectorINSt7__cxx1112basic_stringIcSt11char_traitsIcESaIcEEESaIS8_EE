<dec f='tvm/src/target/metadata_utils.h' l='58' type='std::string tvm::codegen::metadata::AddressFromParts(const std::vector&lt;std::string&gt; &amp; parts)'/>
<doc f='tvm/src/target/metadata_utils.h' l='42'>/*!
 * \brief Construct a unique string &quot;address&quot; for a struct member from a vector of pieces.
 *
 * In codegen, it is frequently necessary to assemble a C-style identifier for an
 * otherwise-anonymous member of Metadata. For instance, suppose Metadata declares an array:
 * struct TVMMetadata {
 *   int64_t* shape;
 * };
 *
 * In order to properly initialize this struct, the array must be declared separately with a global
 * name. This function produces such a name, here termed &quot;address.&quot;
 *
 * \param parts A vector of pieces, typically the struct member names which identify the path to
 *  this member.
 * \return The joined pieces.
 */</doc>
<def f='tvm/src/target/metadata_utils.cc' l='30' ll='39' type='std::string tvm::codegen::metadata::AddressFromParts(const std::vector&lt;std::string&gt; &amp; parts)'/>
<use f='tvm/src/target/metadata_utils.cc' l='72' u='c' c='_ZN3tvm7codegen8metadata21DiscoverArraysVisitor5VisitEPKcPNS_7runtime9ObjectRefE'/>
<use f='tvm/src/target/source/source_module.cc' l='789' u='c' c='_ZN3tvm7codegen18MetadataSerializer5VisitEPKcPNS_7runtime9ObjectRefE'/>
<use f='tvm/src/target/source/source_module.cc' l='872' u='c' c='_ZN3tvm7codegen18MetadataSerializer15CodegenMetadataENS_7runtime8metadata8MetadataE'/>
