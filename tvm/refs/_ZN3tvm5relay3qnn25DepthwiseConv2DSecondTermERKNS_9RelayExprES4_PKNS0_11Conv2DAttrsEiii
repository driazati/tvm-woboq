<def f='tvm/src/relay/qnn/op/convolution.cc' l='272' ll='328' type='tvm::relay::Expr tvm::relay::qnn::DepthwiseConv2DSecondTerm(const tvm::relay::Expr &amp; padded_data, const tvm::relay::Expr &amp; kernel_zero_point, const tvm::relay::Conv2DAttrs * param, int kernel_h, int kernel_w, int channel_multiplier)'/>
<use f='tvm/src/relay/qnn/op/convolution.cc' l='781' u='c' c='_ZN3tvm5relay3qnn21QnnConv2DCanonicalizeERKNS_5AttrsERKNS_7runtime5ArrayINS_9RelayExprEvEERKNS6_INS_4TypeEvEE'/>
<doc f='tvm/src/relay/qnn/op/convolution.cc' l='255'>/*
 * \brief Calculates the second term in the qnn.conv2d depthwise lowering sequence.
 * \param padded_data The padded data expr.
 * \param kernel_zero_point The kernel zero point expr.
 * \param param The qnn conv2d attributes.
 * \param kernel_h The height of kernel.
 * \param kernel_w The width of kernel.
 * \param channel_multiplier The channel/depth multiplier.
 * \return The sequence of Relay operators for term2.
 * \note The term2 looks like this
 *
 *       Sigma(r, s) zp_w * Qa(n, oc/cm, oh + r, ow + s)
 *
 *       Second term is not directly representable by one Relay operator.
 *       However, deeper analysis shows that we can reduce r,s using avg_pool2d,
 *       followed by repeat on the C axis by cm times.
 */</doc>
