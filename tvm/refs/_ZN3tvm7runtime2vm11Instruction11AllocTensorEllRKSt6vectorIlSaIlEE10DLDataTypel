<dec f='tvm/include/tvm/runtime/vm/bytecode.h' l='253' type='static tvm::runtime::vm::Instruction tvm::runtime::vm::Instruction::AllocTensor(tvm::runtime::vm::RegName storage, tvm::runtime::vm::Index offset, const std::vector&lt;int64_t&gt; &amp; shape, DLDataType dtype, tvm::runtime::vm::RegName dst)'/>
<use f='tvm/src/relay/backend/vm/compiler.cc' l='594' u='c' c='_ZN3tvm5relay2vm18VMFunctionCompiler21DeviceAwareVisitExpr_EPKNS0_8CallNodeE'/>
<doc f='tvm/include/tvm/runtime/vm/bytecode.h' l='244'>/*!
   * \brief Construct an allocate tensor instruction with constant shape.
   * \param storage The storage to allocate out of.
   * \param offset The offset to allocate at.
   * \param shape The shape of the tensor.
   * \param dtype The dtype of the tensor.
   * \param dst The destination register.
   * \return The allocate tensor instruction.
   */</doc>
<def f='tvm/src/runtime/vm/bytecode.cc' l='311' ll='326' type='static tvm::runtime::vm::Instruction tvm::runtime::vm::Instruction::AllocTensor(tvm::runtime::vm::RegName storage, tvm::runtime::vm::RegName offset, const std::vector&lt;int64_t&gt; &amp; shape, DLDataType dtype, tvm::runtime::vm::RegName dst)'/>
<use f='tvm/src/runtime/vm/executable.cc' l='874' u='c' c='_ZN3tvm7runtime2vm22DeserializeInstructionERKNS1_23VMInstructionSerializerE'/>
