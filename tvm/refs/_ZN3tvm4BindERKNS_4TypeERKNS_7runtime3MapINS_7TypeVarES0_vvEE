<dec f='tvm/include/tvm/ir/type_functor.h' l='168' type='tvm::Type tvm::Bind(const tvm::Type &amp; type, const Map&lt;tvm::TypeVar, tvm::Type&gt; &amp; args_map)'/>
<doc f='tvm/include/tvm/ir/type_functor.h' l='163'>/*!
 * \brief Bind free type variables in the type.
 * \param type The type to be updated.
 * \param args_map The binding map.
 */</doc>
<def f='tvm/src/ir/type_functor.cc' l='213' ll='215' type='tvm::Type tvm::Bind(const tvm::Type &amp; type, const tvm::Map&lt;TypeVar, Type&gt; &amp; args_map)'/>
<use f='tvm/src/relay/analysis/type_solver.cc' l='318' u='c' c='_ZN3tvm5relay10TypeSolver7Unifier10VisitType_EPKNS_12FuncTypeNodeERKNS_4TypeE'/>
<use f='tvm/src/relay/analysis/util.cc' l='441' u='c' c='_ZN3tvm5relay9TypeSubstERKNS_4TypeERKNS_7runtime3MapINS_7TypeVarES1_vvEE'/>
<use f='tvm/src/relay/ir/expr_functor.cc' l='524' u='c'/>
<use f='tvm/src/relay/transforms/type_infer.cc' l='294' u='c' c='_ZN3tvm5relay14TypeInferencer13VisitPattern_EPKNS0_22PatternConstructorNodeERKNS_4TypeE'/>
<use f='tvm/src/relay/transforms/type_infer.cc' l='444' u='c' c='_ZN3tvm5relay14TypeInferencer19InstantiateFuncTypeEPKNS_12FuncTypeNodeERKNS_7runtime5ArrayINS_4TypeEvEE'/>
