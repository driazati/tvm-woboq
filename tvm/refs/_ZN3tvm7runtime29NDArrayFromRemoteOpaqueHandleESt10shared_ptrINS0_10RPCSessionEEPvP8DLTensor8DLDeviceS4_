<def f='tvm/src/runtime/rpc/rpc_module.cc' l='64' ll='79' type='tvm::runtime::NDArray tvm::runtime::NDArrayFromRemoteOpaqueHandle(std::shared_ptr&lt;RPCSession&gt; sess, void * handle, DLTensor * template_tensor, tvm::Device dev, void * remote_ndarray_handle)'/>
<use f='tvm/src/runtime/rpc/rpc_module.cc' l='299' u='c' c='_ZNK3tvm7runtime14RPCWrappedFunc23WrapRemoteReturnToValueENS0_7TVMArgsEPNS0_11TVMRetValueE'/>
<use f='tvm/src/runtime/rpc/rpc_module.cc' l='454' u='c'/>
<doc f='tvm/src/runtime/rpc/rpc_module.cc' l='54'>/*!
 * \brief Build a local NDArray with remote backing storage.
 * \param sess the RPCSession which owns the given handle.
 * \param handle A pointer valid on the remote end which should form the `data` field of the
 *     underlying DLTensor.
 * \param template_tensor An empty DLTensor whose shape and dtype fields are used to fill the newly
 *     created array. Needed because it&apos;s difficult to pass a shape vector as a PackedFunc arg.
 * \param dev Remote device used with this tensor. Must have non-zero RPCSessMask.
 * \param remote_ndarray_handle The handle returned by RPC server to identify the NDArray.
 */</doc>
