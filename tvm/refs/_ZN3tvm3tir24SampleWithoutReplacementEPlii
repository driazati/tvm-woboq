<dec f='tvm/src/tir/schedule/primitive.h' l='47' type='std::vector&lt;int32_t&gt; tvm::tir::SampleWithoutReplacement(support::LinearCongruentialEngine::TRandState * rand_state, int32_t n, int32_t k)'/>
<doc f='tvm/src/tir/schedule/primitive.h' l='40'>/*!
 * \brief Sample k random integers from given range without replacement, i.e, no duplication.
 * \param rand_state The pointer to schedule&apos;s random state
 * \param n The range is defined as 0 to n-1.
 * \param k The total number of samples.
 * \return The randomly selected samples from the n candidates.
 */</doc>
<use f='tvm/src/meta_schedule/search_strategy/evolutionary_search.cc' l='635' u='c' c='_ZN3tvm13meta_schedule22EvolutionarySearchNode5State17PickWithEpsGreedyERKSt6vectorINS_3tir8ScheduleESaIS5_EES9_i'/>
<def f='tvm/src/tir/schedule/primitive/sampling.cc' l='139' ll='163' type='std::vector&lt;int32_t&gt; tvm::tir::SampleWithoutReplacement(support::LinearCongruentialEngine::TRandState * rand_state, int32_t n, int32_t k)'/>
<use f='tvm/src/tir/schedule/primitive/sampling.cc' l='280' u='c' c='_ZN3tvm3tir17SamplePerfectTileEPlii'/>
