<def f='tvm/src/relay/transforms/pass_utils.h' l='107' ll='113' type='tvm::relay::Expr tvm::relay::TransformF(const std::function&lt;Expr (const Expr &amp;)&gt; &amp; func, const tvm::relay::Expr &amp; e)'/>
<doc f='tvm/src/relay/transforms/pass_utils.h' l='101'>/*!
 * \brief Make arbitrary transformation preserve the out most function.
 * \param func The transformation.
 * \param e The expression
 * \return the transformed expression. If e is a function the return is also a function.
 */</doc>
