<inh f='tvm/include/tvm/runtime/object.h' l='167' c='tvm::runtime::Object'/>
<def f='tvm/include/tvm/ir/diagnostic.h' l='141' ll='150'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='160' c='_ZN3tvm18DiagnosticRendererptEv'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='162' c='_ZN3tvm18DiagnosticRendererptEv'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='165' c='_ZNK3tvm18DiagnosticRendererptEv'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='165' c='_ZNK3tvm18DiagnosticRendererptEv'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='165' c='_ZNK3tvm18DiagnosticRenderer3getEv'/>
<use f='tvm/include/tvm/ir/diagnostic.h' l='165'/>
<size>24</size>
<doc f='tvm/include/tvm/ir/diagnostic.h' l='132'>/*! \brief Display diagnostics in a given display format.
 *
 * A diagnostic renderer is responsible for converting the
 * raw diagnostics into consumable output.
 *
 * For example the terminal renderer will render a sequence
 * of compiler diagnostics to std::out and std::err in
 * a human readable form.
 */</doc>
<mbr r='tvm::DiagnosticRendererNode::renderer' o='128' t='TypedPackedFunc&lt;void (tvm::DiagnosticContext)&gt;'/>
<fun r='_ZN3tvm22DiagnosticRendererNode10VisitAttrsEPNS_11AttrVisitorE'/>
<smbr r='tvm::DiagnosticRendererNode::_type_key' t='const char *const'/>
<smbr r='tvm::DiagnosticRendererNode::_type_final' t='const bool'/>
<smbr r='tvm::DiagnosticRendererNode::_type_child_slots' t='const int'/>
<fun r='_ZN3tvm22DiagnosticRendererNode16RuntimeTypeIndexEv'/>
<fun r='_ZN3tvm22DiagnosticRendererNode27_GetOrAllocRuntimeTypeIndexEv'/>
<use f='tvm/src/ir/diagnostic.cc' l='72'/>
<use f='tvm/src/ir/diagnostic.cc' l='72'/>
<use f='tvm/src/ir/diagnostic.cc' l='72'/>
<use f='tvm/src/ir/diagnostic.cc' l='78' c='_ZN3tvm18DiagnosticRendererC1ENS_7runtime15TypedPackedFuncIFvNS_17DiagnosticContextEEEE'/>
<size>24</size>
