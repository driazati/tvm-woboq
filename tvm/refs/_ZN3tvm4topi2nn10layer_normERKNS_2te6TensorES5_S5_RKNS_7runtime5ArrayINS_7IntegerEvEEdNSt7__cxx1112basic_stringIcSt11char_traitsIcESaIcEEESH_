<def f='tvm/include/tvm/topi/nn/layer_norm.h' l='51' ll='111' type='tvm::te::Tensor tvm::topi::nn::layer_norm(const tvm::te::Tensor &amp; data, const tvm::te::Tensor &amp; gamma, const tvm::te::Tensor &amp; beta, const Array&lt;tvm::Integer&gt; &amp; axis, double epsilon, std::string name = &quot;T_layer_norm&quot;, std::string tag = kInjective)'/>
<use f='tvm/src/topi/nn.cc' l='163' u='c'/>
<doc f='tvm/include/tvm/topi/nn/layer_norm.h' l='38'>/*!
 * \brief Layer normalization.
 * \param data N-D tensor with shape [d_0, d_1, ..., d_{N-1}]
 * \param gamma K-D tensor with shape [r_0, r_1, ..., r_{K-1}] where K == len(axis) and
 *              d_{axis_k} == r_k
 * \param beta Optional, K-D tensor with shape [r_0, r_1, ..., r_{K-1}] where
 *             d_{axis_k} == r_k
 * \param axis The axis to normalize over.
 * \param epsilon The epsilon value to avoid division by zero.
 * \param name The name of the operation.
 * \param tag The tag to mark the operation.
 * \return The normalized tensor, with the same shape as data.
 */</doc>
