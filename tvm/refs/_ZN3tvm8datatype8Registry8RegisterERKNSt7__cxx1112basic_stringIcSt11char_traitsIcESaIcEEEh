<dec f='tvm/src/target/datatype/registry.h' l='68' type='void tvm::datatype::Registry::Register(const std::string &amp; type_name, uint8_t type_code)'/>
<doc f='tvm/src/target/datatype/registry.h' l='59'>/*!
   * \brief Register custom datatype
   * Register a custom datatype with the given type name and type code. Currently, the type code is
   * manually allocated by the user, and the user must ensure that no two custom types share the
   * same code. Generally, this should be straightforward, as the user will be manually registering
   * all of their custom types.
   * \param type_name The name of the type, e.g. &quot;posites2&quot;
   * \param type_code The type code, which should be greater than TVMArgTypeCode::kTVMExtEnd
   */</doc>
<use f='tvm/src/target/datatype/registry.cc' l='30' u='c'/>
<def f='tvm/src/target/datatype/registry.cc' l='51' ll='56' type='void tvm::datatype::Registry::Register(const std::string &amp; type_name, uint8_t type_code)'/>
