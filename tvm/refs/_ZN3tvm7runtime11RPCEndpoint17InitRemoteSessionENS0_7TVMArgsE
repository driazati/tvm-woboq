<dec f='tvm/src/runtime/rpc/rpc_endpoint.h' l='131' type='void tvm::runtime::RPCEndpoint::InitRemoteSession(tvm::runtime::TVMArgs session_constructor_args)'/>
<doc f='tvm/src/runtime/rpc/rpc_endpoint.h' l='107'>/*!
   * \brief Initalize the session on the remote that will be used to back all the RPC requests.
   *
   *  If no session constructor arguments is passed, LocalSession will be used in the remote.
   *  Otherwise the remote serving session will be constructed using the arguments
   *  specified in the session_constructor_args.
   *
   *  The construction rule can be summarized as follows:
   *
   * \code
   *
   *  auto args = session_constructor_args;
   *  int n = args.size();
   *  if (n != 0) {
   *    std::string constructor = args[0];
   *    server.serving_session_ = GetGlobalFunc(constructor)(
   *        args[1], args[2] ... args[n - 1])
   *  } else {
   *    server.serving_session_ = LocalSession();
   *  }
   * \endcode
   *
   * \param session_constructor_args Optional sequence of the remote sesssion constructor.
   */</doc>
<def f='tvm/src/runtime/rpc/rpc_endpoint.cc' l='763' ll='782' type='void tvm::runtime::RPCEndpoint::InitRemoteSession(tvm::runtime::TVMArgs args)'/>
<use f='tvm/src/runtime/rpc/rpc_pipe_impl.cc' l='111' u='c' c='_ZN3tvm7runtime16CreatePipeClientESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE'/>
<use f='tvm/src/runtime/rpc/rpc_socket_impl.cc' l='106' u='c' c='_ZN3tvm7runtime10RPCConnectENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS6_bNS0_7TVMArgsE'/>
