<dec f='tvm/src/tir/schedule/transform.h' l='182' type='void tvm::tir::LeafBlockRemovalPlan(const tvm::tir::ScheduleState &amp; self, const tvm::tir::StmtSRef &amp; leaf_block_sref, tvm::tir::Stmt * src_stmt, tvm::tir::Stmt * tgt_stmt)'/>
<doc f='tvm/src/tir/schedule/transform.h' l='148'>/*!
 * \brief Construct a new AST, with a specific sref tree leaf removed.
 * The leaf&apos;s ancestors who have only a single child will be removed too.
 * \param leaf_block_sref The block/loop sref to the sref tree leaf to be removed
 * \param src_stmt The root of the subtree where the replacement begins
 * \param tgt_stmt The root of the subtree after the replacement
 * \return A boolean indicating if the leaf can be removed successfully
 * \note Read before use:
 * 1) Removal is not conducted beyond scope-level.
 * 2) This method only works properly when the scope root is a stage pipeline.
 *
 * An example of the removal plan, say we are removing the leaf block &quot;B&quot; from the AST.
 *
 *  \code
 *    with block([], &quot;scope_root&quot;):
 *        ...
 *        with block([128, 128], &quot;B&quot;) as [vi, vj]:
 *            B[vi, vj] = A[vi, vj] + 1.0
 *        with block([128, 128], &quot;C&quot;) as [vi, vj]:
 *            C[vi, vj] = B[vi, vj] * 2.0
 *  \endcode
 *
 * Ths method does not mutate the AST, instead it returns the a `(src_stmt, tgt_stmt)` pair as a
 * plan to substitute certain pieces of the IR.
 *
 * In our example, it returns block &quot;scope_root&quot; as `src_stmt`, and the result `tgt_stmt` is:
 *
 *  \code
 *    with block([], &quot;scope_root&quot;):
 *        ...
 *        with block([128, 128], &quot;C&quot;) as [vi, vj]:
 *            C[vi, vj] = B[vi, vj] * 2.0
 *  \endcode
 */</doc>
<use f='tvm/src/tir/schedule/primitive/compute_at.cc' l='601' u='c' c='_ZN3tvm3tir31ComputeAtOrReverseComputeAtImplENS0_13ScheduleStateERKNS0_8StmtSRefES4_bPNS_5arith8AnalyzerEbi'/>
<use f='tvm/src/tir/schedule/primitive/compute_inline.cc' l='672' u='c' c='_ZN3tvm3tir17ComputeInlineImplENS0_13ScheduleStateERKNS0_8StmtSRefEb'/>
<use f='tvm/src/tir/schedule/primitive/compute_inline.cc' l='719' u='c' c='_ZN3tvm3tir24ReverseComputeInlineImplENS0_13ScheduleStateERKNS0_8StmtSRefEb'/>
<def f='tvm/src/tir/schedule/transform.cc' l='182' ll='259' type='void tvm::tir::LeafBlockRemovalPlan(const tvm::tir::ScheduleState &amp; self, const tvm::tir::StmtSRef &amp; leaf_block_sref, tvm::tir::Stmt * src_stmt, tvm::tir::Stmt * tgt_stmt)'/>
<doc f='tvm/src/tir/schedule/transform.cc' l='180'>/******** Block Removal ********/</doc>
