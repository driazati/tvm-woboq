<dec f='tvm/src/relay/transforms/combine_parallel_op_batch.h' l='120' type='tvm::relay::Call tvm::relay::ParallelOpBatchCombiner::MakeCombinedCallFromFollowingOps(const tvm::relay::Expr &amp; data, const tvm::relay::Group &amp; branches, size_t depth, size_t parent_index)'/>
<doc f='tvm/src/relay/transforms/combine_parallel_op_batch.h' l='109'>/*
   * \brief Create combined call from ops that follow the initial combined op at the depth-th level.
   *        This usually involves concatenating or stacking inputs, then creating a new call.
   *        Only called if IsArgCompatbile returns true for each arg.
   * \param data combined op
   * \param branches branches of parallel ops to be combined
   * \param depth depth at which to combine ops
   * \param parent_index index of arg that corresponds to original input that was shared among
   *                     all combined ops
   * \return new combined call as batch op by stacking args
   */</doc>
<inh f='tvm/src/relay/transforms/combine_parallel_op.h' l='192' c='_ZN3tvm5relay18ParallelOpCombiner32MakeCombinedCallFromFollowingOpsERKNS_9RelayExprERKSt6vectorIS5_IPKNS0_8CallNodeESaIS8_EESaISA_EEmm'/>
<def f='tvm/src/relay/transforms/combine_parallel_op_batch.cc' l='126' ll='157' type='tvm::relay::Call tvm::relay::ParallelOpBatchCombiner::MakeCombinedCallFromFollowingOps(const tvm::relay::Expr &amp; data, const tvm::relay::Group &amp; branches, size_t depth, size_t parent_index)'/>
