<dec f='tvm/src/relay/ir/dataflow_matcher_impl.h' l='126' type='void tvm::relay::PatternGrouper::VisitExprs()'/>
<doc f='tvm/src/relay/ir/dataflow_matcher_impl.h' l='118'>/*! \brief Iteratively traverse the Expression in pre-order to find subgraphs
   *
   * If we traverse the graph in post-order, we can run into situtations where a small subgraph will
   * match the pattern. Due to options like AltPattern, a larger subgraph with more nodes later in
   * the graph may also match the pattern. With post-order traversal, we mark the smaller subgraph
   * as matched and fail to catch the larger subgraph. This problem is fixed by using pre-order
   * traversal.
   */</doc>
<use f='tvm/src/relay/ir/dataflow_matcher.cc' l='571' u='c' c='_ZN3tvm5relay14PatternGrouper12GroupMatchesERKNS0_9DFPatternERKNS_9RelayExprE'/>
<def f='tvm/src/relay/ir/dataflow_matcher.cc' l='575' ll='593' type='void tvm::relay::PatternGrouper::VisitExprs()'/>
