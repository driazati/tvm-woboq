<dec f='tvm/src/auto_scheduler/search_policy/utils.h' l='698' type='tvm::auto_scheduler::State tvm::auto_scheduler::DoMultiLevelTiling(const tvm::auto_scheduler::State &amp; state, int stage_id, const std::string &amp; format, std::vector&lt;int&gt; * spatial_split_step_ids = nullptr)'/>
<doc f='tvm/src/auto_scheduler/search_policy/utils.h' l='691'>// Apply multi-level tiling structure according to a string format,
// where &quot;S&quot; stands a space level, &quot;R&quot; stands for a reduction level.
// For example, if the format is &quot;SSRSRS&quot;, then we will
// use tiling structure:  space_L0, space_L1, reduce_L0, space_L2, reduce_L1, space_L3
// For example, if apply &quot;SSRSRS&quot; to matrix multiplication,
// we have space iterators i and j, reduce iterator k.
// Then the tiling structure is : i0, j0, i1, j1, k0, i2, j2, k1, i3, j3</doc>
<use f='tvm/src/auto_scheduler/search_policy/sketch_policy_rules.cc' l='108' u='c' c='_ZNK3tvm14auto_scheduler20RuleMultiLevelTiling5ApplyERKNS0_16SketchPolicyNodeERKNS0_5StateEi'/>
<use f='tvm/src/auto_scheduler/search_policy/sketch_policy_rules.cc' l='137' u='c' c='_ZNK3tvm14auto_scheduler30RuleMultiLevelTilingWithFusion5ApplyERKNS0_16SketchPolicyNodeERKNS0_5StateEi'/>
<def f='tvm/src/auto_scheduler/search_policy/utils.cc' l='149' ll='248' type='tvm::auto_scheduler::State tvm::auto_scheduler::DoMultiLevelTiling(const tvm::auto_scheduler::State &amp; state, int stage_id, const std::string &amp; format, std::vector&lt;int&gt; * spatial_split_step_ids = nullptr)'/>
