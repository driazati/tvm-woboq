<inh f='tvm/include/tvm/runtime/object.h' l='167' c='tvm::runtime::Object'/>
<def f='tvm/include/tvm/runtime/profiling.h' l='50' ll='78'/>
<use f='tvm/include/tvm/runtime/profiling.h' l='142' c='_ZNK3tvm7runtime5TimerptEv'/>
<use f='tvm/include/tvm/runtime/profiling.h' l='142' c='_ZNK3tvm7runtime5TimerptEv'/>
<use f='tvm/include/tvm/runtime/profiling.h' l='142'/>
<size>24</size>
<doc f='tvm/include/tvm/runtime/profiling.h' l='44'>/*! \brief Base class for all implementations.
 *
 * New implementations of this interface should make sure that `Start` and `Stop`
 * are as lightweight as possible. Expensive state synchronization should be
 * done in `SyncAndGetElapsedNanos`.
 */</doc>
<fun r='_ZN3tvm7runtime9TimerNode5StartEv'/>
<fun r='_ZN3tvm7runtime9TimerNode4StopEv'/>
<fun r='_ZN3tvm7runtime9TimerNode22SyncAndGetElapsedNanosEv'/>
<fun r='_ZN3tvm7runtime9TimerNodeD1Ev'/>
<smbr r='tvm::runtime::TimerNode::_type_key' t='const char *const'/>
<fun r='_ZN3tvm7runtime9TimerNode16RuntimeTypeIndexEv'/>
<fun r='_ZN3tvm7runtime9TimerNode27_GetOrAllocRuntimeTypeIndexEv'/>
<ovr f='tvm/src/runtime/profiling.cc' l='44' c='tvm::runtime::DefaultTimerNode'/>
<use f='tvm/src/runtime/profiling.cc' l='44'/>
<ovr f='tvm/src/runtime/profiling.cc' l='72' c='tvm::runtime::CPUTimerNode'/>
<use f='tvm/src/runtime/profiling.cc' l='72'/>
<size>24</size>
