<dec f='tvm/include/tvm/auto_scheduler/feature.h' l='114' type='void tvm::auto_scheduler::GetPerStoreFeaturesFromMeasurePairs(const Array&lt;tvm::auto_scheduler::MeasureInput&gt; &amp; inputs, const Array&lt;tvm::auto_scheduler::MeasureResult&gt; &amp; results, int skip_first_n_feature_extraction, int max_n_bufs, std::vector&lt;std::vector&lt;float&gt;&gt; * features, std::vector&lt;float&gt; * normalized_throughputs, std::vector&lt;int&gt; * task_ids)'/>
<def f='tvm/src/auto_scheduler/feature.cc' l='1511' ll='1585' type='void tvm::auto_scheduler::GetPerStoreFeaturesFromMeasurePairs(const Array&lt;tvm::auto_scheduler::MeasureInput&gt; &amp; inputs, const Array&lt;tvm::auto_scheduler::MeasureResult&gt; &amp; results, int skip_first_n_feature_extraction, int max_n_bufs, std::vector&lt;std::vector&lt;float&gt;&gt; * features, std::vector&lt;float&gt; * normalized_throughputs, std::vector&lt;int&gt; * task_ids)'/>
<use f='tvm/src/auto_scheduler/feature.cc' l='1695' u='c'/>
<doc f='tvm/include/tvm/auto_scheduler/feature.h' l='103'>/*!
 * \brief Get per-store features from measurement input/result pairs
 * \param inputs The measurement inputs
 * \param results The measurement results
 * \param skip_first_n_feature_extraction Skip feature extraction for the first n measurement pairs
 * \param max_n_bufs The maximum number of extracted buffers for one statement
 * \param features The returned feature vector. The innermost vector contains the
 * feature vectors for all BufferStoreNode statements
 * \param normalized_throughputs The normalized throughputs for all states
 * \param task_ids The task ids for all states
 */</doc>
