<dec f='tvm/include/tvm/relay/expr_functor.h' l='421' type='void tvm::relay::PostOrderVisit(const tvm::relay::Expr &amp; node, std::function&lt;void (const Expr &amp;)&gt; fvisit)'/>
<doc f='tvm/include/tvm/relay/expr_functor.h' l='415'>/*!
 * \brief recursively visit the ir in post DFS order node, apply fvisit
 * Each node is guaranteed to be visited only once.
 * \param node The ir to be visited.
 * \param fvisit The visitor function to be applied.
 */</doc>
<use f='tvm/src/relay/analysis/call_graph.cc' l='69' u='c' c='_ZN3tvm5relay13CallGraphNode14AddToCallGraphERKNS_9GlobalVarERKNS0_8FunctionE'/>
<use f='tvm/src/relay/backend/task_extraction.cc' l='78' u='c' c='_ZN3tvm5relay7backend11ExtractTaskENS_8IRModuleENS_6TargetENS_7runtime3MapINS4_6StringENS4_7NDArrayEvvEES6_'/>
<use f='tvm/src/relay/ir/dataflow_matcher.cc' l='584' u='c' c='_ZN3tvm5relay14PatternGrouper10VisitExprsEv'/>
<def f='tvm/src/relay/ir/expr_functor.cc' l='422' ll='424' type='void tvm::relay::PostOrderVisit(const tvm::relay::Expr &amp; e, std::function&lt;void (const Expr &amp;)&gt; fvisit)'/>
<use f='tvm/src/relay/ir/expr_functor.cc' l='427' u='c'/>
