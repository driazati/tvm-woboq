<def f='tvm/include/tvm/relay/expr_functor.h' l='338' ll='404'/>
<use f='tvm/include/tvm/relay/expr_functor.h' l='340'/>
<use f='tvm/include/tvm/relay/expr_functor.h' l='413' c='_ZN3tvm5relay16PostOrderRewriteERKNS_9RelayExprEPNS0_12ExprRewriterE'/>
<size>8</size>
<doc f='tvm/include/tvm/relay/expr_functor.h' l='328'>/*! \brief A non-iterating Expression Rewriter
 *
 *  ExprRewriter provides a Rewrite interface for modifying graphs in Post-DFS order.
 *
 * The expectation is that ExprRewriter objects will be passed to PostOrderRewrite, which will
 * non-recursively unroll the graph and call Rewriting on inputs. It will then pass the original
 * node, called `pre`, and a node recreated with any alterned inputs, called `post`, to the
 * ExprRewriter. The ExprRewriter can then use the information in those two nodes to do more complex
 * graph rewriting.
 */</doc>
<fun r='_ZN3tvm5relay12ExprRewriterD1Ev'/>
<fun r='_ZN3tvm5relay12ExprRewriterclERKNS_9RelayExprES4_'/>
<fun r='_ZN3tvm5relay12ExprRewriter7RewriteERKNS_9RelayExprES4_'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_7VarNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS_13GlobalVarNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_12ConstantNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_9TupleNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_12FunctionNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_8CallNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_7LetNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_6IfNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS_6OpNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_16TupleGetItemNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_13RefCreateNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_11RefReadNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_12RefWriteNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS_15ConstructorNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter8Rewrite_EPKNS0_9MatchNodeERKNS_9RelayExprE'/>
<fun r='_ZN3tvm5relay12ExprRewriter10InitVTableEv'/>
<ovr f='tvm/src/relay/analysis/get_calibration_data.cc' l='46' c='tvm::relay::Collector'/>
<use f='tvm/src/relay/analysis/get_calibration_data.cc' l='46'/>
<ovr f='tvm/src/relay/analysis/get_calibration_data.cc' l='135' c='tvm::relay::OutputMapper'/>
<use f='tvm/src/relay/analysis/get_calibration_data.cc' l='135'/>
<size>8</size>
<use f='tvm/src/relay/ir/expr_functor.cc' l='109' c='_ZN3tvm5relay17PostOrderRewriterC1EPNS0_12ExprRewriterE'/>
<use f='tvm/src/relay/ir/expr_functor.cc' l='146'/>
<use f='tvm/src/relay/ir/expr_functor.cc' l='149' c='_ZN3tvm5relay16PostOrderRewriteERKNS_9RelayExprEPNS0_12ExprRewriterE'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/annotate_target.cc' l='44' c='tvm::relay::annotate_target::AnnotateTargetRewriter'/>
<use f='tvm/src/relay/transforms/annotate_target.cc' l='44'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/canonicalize_ops.cc' l='36' c='tvm::relay::BiasAddSimplifier'/>
<use f='tvm/src/relay/transforms/canonicalize_ops.cc' l='36'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/capture_postdfsindex_in_spans.cc' l='37' c='tvm::relay::transform::(anonymousnamespace)::SpansRewriter'/>
<use f='tvm/src/relay/transforms/capture_postdfsindex_in_spans.cc' l='37'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/convert_sparse_conv2d.cc' l='73' c='tvm::relay::Conv2dToSparseConv2dMutator'/>
<use f='tvm/src/relay/transforms/convert_sparse_conv2d.cc' l='73'/>
<ovr f='tvm/src/relay/transforms/convert_sparse_conv2d.cc' l='184' c='tvm::relay::Conv2dToSparseConv2dMutator2'/>
<use f='tvm/src/relay/transforms/convert_sparse_conv2d.cc' l='184'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/convert_sparse_dense.cc' l='73' c='tvm::relay::DenseToSparseDenseMutator'/>
<use f='tvm/src/relay/transforms/convert_sparse_dense.cc' l='73'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/fast_math.cc' l='35' c='tvm::relay::FastMathMutator'/>
<use f='tvm/src/relay/transforms/fast_math.cc' l='35'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/legalize.cc' l='38' c='tvm::relay::legalize::Legalizer'/>
<use f='tvm/src/relay/transforms/legalize.cc' l='38'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/merge_compiler_regions.cc' l='138' c='tvm::relay::merge_compiler_region::MergeAnnotations'/>
<use f='tvm/src/relay/transforms/merge_compiler_regions.cc' l='138'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/partition_graph.cc' l='410' c='DefaultRemover'/>
<use f='tvm/src/relay/transforms/partition_graph.cc' l='410' c='_ZN3tvm5relay12partitioning24RemoveDefaultAnnotationsENS_8IRModuleE'/>
<ovr f='tvm/src/relay/transforms/partition_graph.cc' l='451' c='TupleOutFlattener'/>
<use f='tvm/src/relay/transforms/partition_graph.cc' l='451' c='_ZN3tvm5relay12partitioning19FlattenTupleOutputsENS_8IRModuleE'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/simplify_fc_transpose.cc' l='79' c='tvm::relay::FCTransposeMutator'/>
<use f='tvm/src/relay/transforms/simplify_fc_transpose.cc' l='79'/>
<size>8</size>
<ovr f='tvm/src/relay/transforms/split_args.cc' l='32' c='tvm::relay::ArgumentSplitter'/>
<use f='tvm/src/relay/transforms/split_args.cc' l='32'/>
<size>8</size>
