<dec f='tvm/include/tvm/arith/iter_affine_map.h' l='355' type='Array&lt;tvm::PrimExpr&gt; tvm::arith::IterMapSimplify(const Array&lt;tvm::PrimExpr&gt; &amp; indices, const Map&lt;tvm::tir::Var, tvm::Range&gt; &amp; input_iters, const tvm::PrimExpr &amp; input_pred, tvm::arith::IterMapLevel check_level, bool simplify_trivial_iterators = true)'/>
<doc f='tvm/include/tvm/arith/iter_affine_map.h' l='345'>/*!
 * \brief Use IterVarMap detector to rewrite and simplify the indices
 *
 * \param indices The indices to detect pattern for.
 * \param input_iters Map from variable to iterator&apos;s range.
 * \param input_pred The predicate constraints on the input iterators
 * \param check_level The iter mapping checking level.
 * \param simplify_trivial_iterators If true, iterators with unit extents are simplified
 * \return The indices after rewrite
 */</doc>
<def f='tvm/src/arith/iter_affine_map.cc' l='1763' ll='1780' type='Array&lt;tvm::PrimExpr&gt; tvm::arith::IterMapSimplify(const Array&lt;tvm::PrimExpr&gt; &amp; indices, const Map&lt;tvm::tir::Var, tvm::Range&gt; &amp; input_iters, const tvm::PrimExpr &amp; input_pred, tvm::arith::IterMapLevel check_level, bool simplify_trivial_iterators = true)'/>
<use f='tvm/src/tir/schedule/primitive/loop_transformation.cc' l='119' u='c' c='_ZN3tvm3tir27IterMapSimplifyBlockBinding10VisitStmt_EPKNS0_16BlockRealizeNodeE'/>
