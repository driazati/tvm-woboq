<def f='tvm/include/tvm/tir/function.h' l='310' type='const char *const'/>
<doc f='tvm/include/tvm/tir/function.h' l='290'>/*!
 * \brief List of thread IterVar that a DeviceLaunch function corresponds to.
 *
 * Type: Array&lt;tir::IterVar&gt;
 *
 * We call a device kernel launch function f using the following convention:
 *
 * Call(f,
 *      [arg1, arg2, ..., arg_n,
 *       work_size_1, work_size_2, ... work_size_m, dyn_shmem_size])
 *
 * Here n = len(arg), m = len(work_size) = len(device_thread_axis).
 *
 * When kDeviceUseDynSharedMemory is not set, dyn_shmem_size argument is omitted.
 *
 * The list of device_thread_axis indicates how can be bind the
 * work_size arguments to the corresponding threads.
 *
 * \sa tvm::CallingConv::kDeviceKernelLaunch
 */</doc>
<use f='tvm/src/target/build_common.h' l='53' u='r' c='_ZN3tvm7codegen15ExtractFuncInfoB5cxx11ERKNS_8IRModuleE'/>
<use f='tvm/src/target/source/codegen_metal.cc' l='133' u='r' c='_ZN3tvm7codegen12CodeGenMetal11AddFunctionERKNS_3tir8PrimFuncE'/>
<use f='tvm/src/tir/transforms/remap_thread_axis.cc' l='78' u='r' c='_ZN3tvm3tir15RemapThreadAxisEONS0_8PrimFuncENS_7runtime3MapINS3_6StringENS0_7IterVarEvvEE'/>
<use f='tvm/src/tir/transforms/remap_thread_axis.cc' l='79' u='r' c='_ZN3tvm3tir15RemapThreadAxisEONS0_8PrimFuncENS_7runtime3MapINS3_6StringENS0_7IterVarEvvEE'/>
<use f='tvm/src/tir/transforms/remap_thread_axis.cc' l='91' u='r' c='_ZN3tvm3tir15RemapThreadAxisEONS0_8PrimFuncENS_7runtime3MapINS3_6StringENS0_7IterVarEvvEE'/>
<use f='tvm/src/tir/transforms/split_host_device.cc' l='306' u='r' c='_ZN3tvm3tir18HostDeviceSplitter15SplitDeviceFuncENS0_4StmtE'/>
