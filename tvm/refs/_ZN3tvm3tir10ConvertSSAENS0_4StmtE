<dec f='tvm/src/tir/transforms/ir_utils.h' l='203' type='tvm::tir::Stmt tvm::tir::ConvertSSA(tvm::tir::Stmt stmt)'/>
<doc f='tvm/src/tir/transforms/ir_utils.h' l='198'>/*!
 * \brief Convert a IR node to be SSA form.
 * \param stmt The source statement to be converted.
 * \return The converted form.
 */</doc>
<use f='tvm/src/te/schedule/operation_inline.cc' l='87' u='c' c='_ZN3tvm2te6InlineENS_3tir4StmtENS0_9OperationENS_7runtime5ArrayINS1_3VarEvEENS_8PrimExprE'/>
<use f='tvm/src/tir/transforms/hoist_expression.cc' l='431' u='c' c='_ZN3tvm3tir17ExpressionHoister5HoistENS0_4StmtENS0_21HoistExpressionConfigE'/>
<use f='tvm/src/tir/transforms/inject_double_buffer.cc' l='94' u='c' c='_ZN3tvm3tir20DoubleBufferInjector6InjectENS0_4StmtE'/>
<use f='tvm/src/tir/transforms/inject_rolling_buffer.cc' l='68' u='c' c='_ZN3tvm3tir21RollingBufferInjector6InjectENS0_4StmtE'/>
<use f='tvm/src/tir/transforms/inject_software_pipeline.cc' l='1200' u='c' c='_ZN3tvm3tir9transform22InjectSoftwarePipelineEv'/>
<use f='tvm/src/tir/transforms/inject_virtual_thread.cc' l='544' u='c' c='_ZN3tvm3tir9transform19InjectVirtualThreadEv'/>
<def f='tvm/src/tir/transforms/ir_utils.cc' l='271' type='tvm::tir::Stmt tvm::tir::ConvertSSA(tvm::tir::Stmt stmt)'/>
<use f='tvm/src/tir/transforms/loop_partition.cc' l='681' u='c' c='_ZN3tvm3tir15LoopPartitioner12TryPartitionERKNS0_4StmtENS0_3VarENS_8PrimExprES6_S2_b'/>
<use f='tvm/src/tir/transforms/unroll_loop.cc' l='220' u='c' c='_ZN3tvm3tir10UnrollLoopENS0_4StmtENS0_16UnrollLoopConfigE'/>
