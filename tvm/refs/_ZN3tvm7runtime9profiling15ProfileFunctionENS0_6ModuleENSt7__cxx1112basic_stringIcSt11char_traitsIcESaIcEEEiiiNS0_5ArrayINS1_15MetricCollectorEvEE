<dec f='tvm/include/tvm/runtime/profiling.h' l='537' type='tvm::runtime::PackedFunc tvm::runtime::profiling::ProfileFunction(tvm::runtime::Module mod, std::string func_name, int device_type, int device_id, int warmup_iters, Array&lt;tvm::runtime::profiling::MetricCollector&gt; collectors)'/>
<doc f='tvm/include/tvm/runtime/profiling.h' l='506'>/*! \brief Collect performance information of a function execution. Usually
 * used with a compiled PrimFunc (via tvm.build).
 *
 * This information can include performance counters like cache hits and FLOPs
 * that are useful in debugging performance issues of individual PrimFuncs.
 * Different metrics can be collected depending on which MetricCollector is
 * used.
 *
 * Example usage:
 * \code{.cpp}
 * // Use PAPI to measure the number of floating point operations.
 * PackedFunc profiler = ProfileModule(
 *     mod, &quot;main&quot;, kDLCPU, 0, {CreatePAPIMetricCollector({{kDLCPU, 0}, {&quot;PAPI_FP_OPS&quot;}})});
 * Report r = profiler(arg1, arg2, arg);
 * std::cout &lt;&lt; r &lt;&lt; std::endl;
 * \endcode
 *
 * \param mod Module to profile. Usually a PrimFunc that has been compiled to machine code.
 * \param func_name Name of function to run in the module.
 * \param device_type Device type to run on. Profiling will include performance
 *                    metrics specific to this device type.
 * \param device_id Id of device to run on.
 * \param warmup_iters Number of iterations of the function to run before collecting
 *                     performance information. Recommend to set this larger
 *                     than 0 so that cache effects are consistent.
 * \param collectors List of different
 *                   ways to collect metrics. See MetricCollector.
 * \returns A PackedFunc which takes the same arguments as the `mod[func_name]`
 *          and returns performance metrics as a `Map&lt;String, ObjectRef&gt;` where
 *          values can be `CountNode`, `DurationNode`, `PercentNode`.
 */</doc>
<def f='tvm/src/runtime/profiling.cc' l='789' ll='832' type='tvm::runtime::PackedFunc tvm::runtime::profiling::ProfileFunction(tvm::runtime::Module mod, std::string func_name, int device_type, int device_id, int warmup_iters, Array&lt;tvm::runtime::profiling::MetricCollector&gt; collectors)'/>
<use f='tvm/src/runtime/profiling.cc' l='846' u='c'/>
