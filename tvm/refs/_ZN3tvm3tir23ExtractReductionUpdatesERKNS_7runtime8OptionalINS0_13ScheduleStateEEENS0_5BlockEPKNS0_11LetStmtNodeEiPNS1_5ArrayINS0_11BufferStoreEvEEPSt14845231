<def f='tvm/src/tir/schedule/analysis/reducer.cc' l='377' ll='450' type='void tvm::tir::ExtractReductionUpdates(const Optional&lt;tvm::tir::ScheduleState&gt; &amp; self, tvm::tir::Block block, const tvm::tir::LetStmtNode * let, int n_buffers, Array&lt;tvm::tir::BufferStore&gt; * updates, std::unordered_map&lt;const BufferNode *, int&gt; * buf2index)'/>
<use f='tvm/src/tir/schedule/analysis/reducer.cc' l='485' u='c' c='_ZN3tvm3tir41GetInitValuesAndUpdatesFromReductionBlockERKNS_7runtime8OptionalINS0_13ScheduleStateEEENS0_5BlockE'/>
<doc f='tvm/src/tir/schedule/analysis/reducer.cc' l='366'>/*!
 * \brief Extract the BufferStores, which serve as the reduction updates, from the given LetStmt and
 * the BufferStores inside. And meanwhile set the buffer order of the reduction
 * \param self The schedule state, used for error reporting
 * \param block The reduction block, used for error reporting
 * \param let The LetStmt from which the reduction updates are extracted
 * \param n_buffers The number of buffers participating in the reduction
 * \param updates The extracted reduction updates
 * \param buf2index A mapping from reduction buffers to their indices of the reduction order
 * \throw ScheduleError If rfactor or cross-thread reduction cannot be applied to the block
 */</doc>
