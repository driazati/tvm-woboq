<dec f='tvm/include/tvm/tir/schedule/schedule.h' l='616' type='void tvm::tir::ScheduleNode::TransformBlockLayout(const tvm::tir::BlockRV &amp; block_rv, const tvm::tir::IndexMap &amp; index_map)'/>
<doc f='tvm/include/tvm/tir/schedule/schedule.h' l='608'>/*!
   * \brief Apply a transformation represented by IndexMap to block
   * \details The block iters and the block body are transformed by the given index_map.
   * Outer loops corresponding to each new block iter are regenerated.
   * The index_map is required to be bijective affine since we need its inverse mapping.
   * \param block_rv The block to be transformed
   * \param index_map The transformation to apply.
   */</doc>
<use f='tvm/src/meta_schedule/schedule_rule/multi_level_tiling_tensor_core.cc' l='506' u='c' c='_ZNK3tvm13meta_schedule30MultiLevelTilingTensorCoreNode25TransformWithTensorIntrinEPNS0_19TensorCoreStateNodeERKNS_7runtime6StringE'/>
<use f='tvm/src/meta_schedule/schedule_rule/multi_level_tiling_tensor_core.cc' l='507' u='c' c='_ZNK3tvm13meta_schedule30MultiLevelTilingTensorCoreNode25TransformWithTensorIntrinEPNS0_19TensorCoreStateNodeERKNS_7runtime6StringE'/>
<use f='tvm/src/meta_schedule/schedule_rule/multi_level_tiling_tensor_core.cc' l='508' u='c' c='_ZNK3tvm13meta_schedule30MultiLevelTilingTensorCoreNode25TransformWithTensorIntrinEPNS0_19TensorCoreStateNodeERKNS_7runtime6StringE'/>
<use f='tvm/src/meta_schedule/schedule_rule/multi_level_tiling_tensor_core.cc' l='509' u='c' c='_ZNK3tvm13meta_schedule30MultiLevelTilingTensorCoreNode25TransformWithTensorIntrinEPNS0_19TensorCoreStateNodeERKNS_7runtime6StringE'/>
<ovr f='tvm/src/tir/schedule/concrete_schedule.cc' l='771' c='_ZN3tvm3tir20ConcreteScheduleNode20TransformBlockLayoutERKNS0_7BlockRVERKNS0_8IndexMapE'/>
<use f='tvm/src/tir/schedule/primitive/layout_transformation.cc' l='601' u='c' c='_ZN3tvm3tir26TransformBlockLayoutTraits23UnpackedApplyToScheduleENS0_8ScheduleENS0_7BlockRVENS0_8IndexMapE'/>
<use f='tvm/src/tir/schedule/schedule.cc' l='256' u='a'/>
