<def f='tvm/src/tir/schedule/primitive/for_kind.cc' l='121' ll='135' type='void tvm::tir::CheckParallelizability(const tvm::tir::ScheduleState &amp; self, const tvm::tir::For &amp; loop, tvm::tir::ForKind for_kind, runtime::ThreadScope thread_scope)'/>
<use f='tvm/src/tir/schedule/primitive/for_kind.cc' l='164' u='c' c='_ZN3tvm3tir22ParallelizeComputationERKNS0_13ScheduleStateERKNS0_8StmtSRefENS0_7ForKindENS_7runtime8OptionalINS0_7IterVarEEE'/>
<doc f='tvm/src/tir/schedule/primitive/for_kind.cc' l='111'>/*!
 * \brief For each block (recursive) under the given loop, check whether the input loop can be
 * parallelized/vectorized/bound with regard to the block
 * \param self The schedule state
 * \param loop The loop to be parallelized/vectorized/bound
 * \param for_kind The desired ForKind (only `kParallel`, `kVectorized` and `kThreadBinding` are
 * allowed)
 * \param thread_scope The thread scope of the thread axis to be bound, which is an invalid value if
 * the operation is not &quot;bind&quot;
 */</doc>
