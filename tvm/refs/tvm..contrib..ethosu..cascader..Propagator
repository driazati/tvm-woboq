<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='92'/>
<inh f='tvm/include/tvm/runtime/object.h' l='511' c='tvm::runtime::ObjectRef'/>
<def f='tvm/src/contrib/ethosu/cascader/propagator.h' l='125' ll='130'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1ERKS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1EOS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatoraSERKS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatoraSERKS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatoraSEOS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.h' l='129' c='_ZN3tvm7contrib6ethosu8cascader10PropagatoraSEOS3_'/>
<use f='tvm/src/contrib/ethosu/cascader/graph.h' l='175' c='_ZNK3tvm7contrib6ethosu8cascader8PartNode14GetPropagatorsEv'/>
<use f='tvm/src/contrib/ethosu/cascader/graph.h' l='217'/>
<size>8</size>
<doc f='tvm/src/contrib/ethosu/cascader/propagator.h' l='100'>/*!
 * \brief A class to transform StripeConfigs according to the data dependencies
 between Part outputs and inputs. The dependency is represented as an affine
 transformation matrix + an offset vector. Using this, an output StripeConfig
 can be propagated through a Part to arrive at the input StripeConfigs.
 * \note The transform matrix should be a 2D affine transform matrix.
 * As an example, consider a (1, 1, 2, 32) output stripe for an NHWC pooling
 * operation with a 3x3 pool size:
 *
 * [1, 0, 0, 0, 0]     [ 1]     [ 1]
 * [0, 1, 0, 0, 2]     [ 1]     [ 3]
 * [0, 0, 1, 0, 2]  x  [ 2]  =  [ 4]
 * [0, 0, 0, 1, 0]     [32]     [32]
 * [0, 0, 0, 0, 1]     [ 1]     [ 1]
 *
 * Using the appropriate affine matrix we see that the required input data to
 * produce that output stripe is a (1, 3, 4, 32) stripe. These matrices should
 * be derived for the Parts to relate input and output data dependencies.
 *
 * The offset is a 1D vector representing the first tensor element to read.
 * Often this is just the 0 element, but for an operator such as pad it may be
 * negative. For instance, a symmetric padding by 1 of a 2D tensor would require
 * the offset vector [-1, -1]. Additionally, positive offsets may be required
 * for operators like strided_slice where only part of a tensor is read from.
 */</doc>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1ERKSt6vectorIS4_IfSaIfEESaIS6_EERKS4_IiSaIiEE'/>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1Ev'/>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1ENS_7runtime9ObjectPtrINS4_6ObjectEEE'/>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1ERKS3_'/>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1EOS3_'/>
<fun r='_ZNK3tvm7contrib6ethosu8cascader10Propagator3getEv'/>
<use f='tvm/src/contrib/ethosu/cascader/graph.cc' l='100' c='_ZN3tvm7contrib6ethosu8cascader8PartNode10VisitAttrsEPNS_11AttrVisitorE'/>
<size>8</size>
<use f='tvm/src/contrib/ethosu/cascader/parts/ethosu.h' l='107' c='_ZN3tvm7contrib6ethosu8cascader10EthosuPartC1ERKNS2_10TESubgraphESt6vectorINS2_10PropagatorESaIS8_EERKS7_IiSaIiEEiRKS7_INS2_11BlockConfigESaISF_EEi'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/ethosu.cc' l='153' c='_ZN3tvm7contrib6ethosu8cascader10EthosuPartC1ERKNS2_10TESubgraphESt6vectorINS2_10PropagatorESaIS8_EERKS7_IiSaIiEEiRKS7_INS2_11BlockConfigESaISF_EEi'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/ethosu.cc' l='180'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/ethosu.cc' l='183'/>
<size>8</size>
<use f='tvm/src/contrib/ethosu/cascader/parts/inline.h' l='70' c='_ZN3tvm7contrib6ethosu8cascader10InlinePartC1ERKNS2_10TESubgraphESt6vectorINS2_10PropagatorESaIS8_EE'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/inline.cc' l='42' c='_ZN3tvm7contrib6ethosu8cascader10InlinePartC1ERKNS2_10TESubgraphESt6vectorINS2_10PropagatorESaIS8_EE'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/inline.cc' l='54'/>
<use f='tvm/src/contrib/ethosu/cascader/parts/inline.cc' l='56'/>
<size>8</size>
<use f='tvm/src/contrib/ethosu/cascader/propagator.cc' l='111'/>
<use f='tvm/src/contrib/ethosu/cascader/propagator.cc' l='115'/>
<size>8</size>
<fun r='_ZN3tvm7contrib6ethosu8cascader10PropagatorC1ERKSt6vectorIS4_IfSaIfEESaIS6_EERKS4_IiSaIiEE'/>
