<def f='tvm/src/arith/rewrite_simplify.cc' l='86' ll='108' type='tvm::PrimExpr tvm::arith::NormalizeBooleanOperators(tvm::PrimExpr expr)'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='93' u='c' c='_ZN3tvm5arith25NormalizeBooleanOperatorsENS_8PrimExprE'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='93' u='c' c='_ZN3tvm5arith25NormalizeBooleanOperatorsENS_8PrimExprE'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='95' u='c' c='_ZN3tvm5arith25NormalizeBooleanOperatorsENS_8PrimExprE'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='95' u='c' c='_ZN3tvm5arith25NormalizeBooleanOperatorsENS_8PrimExprE'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='305' u='c' c='_ZN3tvm5arith17RewriteSimplifier4Impl15EnterConstraintERKNS_8PrimExprE'/>
<use f='tvm/src/arith/rewrite_simplify.cc' l='1839' u='c' c='_ZN3tvm5arith17RewriteSimplifier4Impl10VisitExpr_EPKNS_3tir6OrNodeE'/>
<doc f='tvm/src/arith/rewrite_simplify.cc' l='76'>/* Utility for rewriting only boolean portions of an expression
 *
 * Performs a subset of simplifications done by RewriteSimplifier,
 * sufficient to negate a simplified expression.  Intended for
 * application on an expression that has previously been simplified.
 *
 * \param expr The boolean expression to be normalized
 *
 * \returns The normalized boolean expression
 */</doc>
