<def f='tvm/include/tvm/relay/pattern_functor.h' l='82' ll='84' type='R tvm::relay::PatternFunctor&lt;type-parameter-0-0 (const tvm::relay::Pattern &amp;, type-parameter-0-1...)&gt;::operator()(const tvm::relay::Pattern &amp; n, Args... args)'/>
<doc f='tvm/include/tvm/relay/pattern_functor.h' l='76'>/*!
   * \brief Same as call.
   * \param n The expression node.
   * \param args Additional arguments.
   * \return The result of the call
   */</doc>
<use f='tvm/src/relay/ir/pattern_functor.cc' l='30' u='c' c='_ZN3tvm5relay14PatternMutator6MutateERKNS0_7PatternE'/>
