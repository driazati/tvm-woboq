<dec f='tvm/include/tvm/auto_scheduler/measure_record.h' l='134' type='void tvm::auto_scheduler::ReadMeasureRecord(const std::string &amp; str, tvm::auto_scheduler::MeasureInputNode * inp, tvm::auto_scheduler::MeasureResultNode * res, std::string * log_version)'/>
<doc f='tvm/include/tvm/auto_scheduler/measure_record.h' l='127'>/*!
 * \brief Read one measure record from a string.
 * \param str The record string to be parsed.
 * \param inp A pointer to a MeasureInputNode used to store the return value.
 * \param res A pointer to a MeasureResultNode used to store the return value.
 * \param log_version A pointer to a string used to store the log version.
 */</doc>
<def f='tvm/src/auto_scheduler/measure_record.cc' l='332' ll='350' type='void tvm::auto_scheduler::ReadMeasureRecord(const std::string &amp; str, tvm::auto_scheduler::MeasureInputNode * inp, tvm::auto_scheduler::MeasureResultNode * res, std::string * log_version)'/>
<use f='tvm/src/auto_scheduler/measure_record.cc' l='375' u='c' c='_ZN3tvm14auto_scheduler16RecordReaderNode8ReadNextEPNS0_16MeasureInputNodeEPNS0_17MeasureResultNodeE'/>
<use f='tvm/src/auto_scheduler/measure_record.cc' l='434' u='c'/>
