<def f='tvm/src/tir/transforms/inject_software_pipeline.cc' l='953' ll='977' type='void tvm::tir::software_pipeline::BuildDependencyGraph(const Array&lt;tvm::tir::Block&gt; &amp; blocks, std::unordered_map&lt;Block, Array&lt;Block&gt;, ObjectPtrHash, ObjectPtrEqual&gt; * dep_src2dst, std::unordered_map&lt;Block, Array&lt;Block&gt;, ObjectPtrHash, ObjectPtrEqual&gt; * dep_dst2src)'/>
<use f='tvm/src/tir/transforms/inject_software_pipeline.cc' l='1016' u='c' c='_ZN3tvm3tir17software_pipeline16PipelineInjector20ValidatePipelineBodyERKSt13unordered_mapINS0_5BlockENS1_18PipelineAnnotationENS_7runtime13ObjectPtrH12376906'/>
<doc f='tvm/src/tir/transforms/inject_software_pipeline.cc' l='945'>/*!
 * \brief Build the dependency graph among a array of blocks.
 * \param[in] blocks The array of blocks.
 * \param[out] dep_src2dst Optional, a map to store dependency edges from the source to the
 * destination.
 * \param[out] dep_dst2src Optional, a map to store dependency edges from the
 * destination to the source.
 */</doc>
