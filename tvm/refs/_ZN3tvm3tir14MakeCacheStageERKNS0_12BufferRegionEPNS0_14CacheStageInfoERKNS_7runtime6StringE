<def f='tvm/src/tir/schedule/primitive/cache_read_write.cc' l='105' ll='163' type='tvm::tir::Block tvm::tir::MakeCacheStage(const tvm::tir::BufferRegion &amp; cache_region, tvm::tir::CacheStageInfo * info, const tvm::runtime::String &amp; storage_scope)'/>
<use f='tvm/src/tir/schedule/primitive/cache_read_write.cc' l='1085' u='c' c='_ZN3tvm3tir9CacheReadENS0_13ScheduleStateERKNS0_8StmtSRefEiRKNS_7runtime6StringENS5_5ArrayIS2_vEE'/>
<use f='tvm/src/tir/schedule/primitive/cache_read_write.cc' l='1141' u='c' c='_ZN3tvm3tir10CacheWriteENS0_13ScheduleStateERKNS0_8StmtSRefEiRKNS_7runtime6StringE'/>
<doc f='tvm/src/tir/schedule/primitive/cache_read_write.cc' l='95'>/*!
 * \brief Create a loop nest that represents cache copy (cache_read / cache_write) from read buffer
 *        to write buffer.
 * \note This function will store the stmt with loop nesting to the CacheStageInfo, but only return
 *        the inside block.
 * \param cache_region The cached copy region.
 * \param info The cache stage information, which will be updated in the function.
 * \param storage_scope The storage scope of the cached buffer (only used in naming here)
 * \returns A block indicating the body of the loop nesting.
 */</doc>
