<dec f='tvm/src/tir/schedule/analysis.h' l='728' type='tvm::PrimExpr tvm::tir::SimplifyNonTrivialExpr(const tvm::PrimExpr &amp; expr, arith::Analyzer * analyzer)'/>
<doc f='tvm/src/tir/schedule/analysis.h' l='718'>/*!
 * \brief Simplify non-trivial expressions
 * \param expr The expression to be simplified
 * \param analyzer The analyzer
 * \return The simplified expression
 *
 * During scheduling, we often need preserve block iters in trivial expressions that can be
 * simplified to constant values for further scheduling and analysis because simplifing away the
 * block iters may result in loss of information for further analysis.
 */</doc>
<def f='tvm/src/tir/schedule/analysis/analysis.cc' l='1619' ll='1626' type='tvm::PrimExpr tvm::tir::SimplifyNonTrivialExpr(const tvm::PrimExpr &amp; expr, arith::Analyzer * analyzer)'/>
<use f='tvm/src/tir/schedule/ir_comparator.cc' l='659' u='c' c='_ZN3tvm3tir23AutoTensorizeComparator19CompareBufferAccessEPKT_S4_'/>
<use f='tvm/src/tir/schedule/primitive/cache_read_write.cc' l='1371' u='c' c='_ZN3tvm3tir7ReIndexENS0_13ScheduleStateERKNS0_8StmtSRefEiNS0_15BufferIndexTypeE'/>
<use f='tvm/src/tir/schedule/primitive/layout_transformation.cc' l='705' u='c' c='_ZN3tvm3tir23TransformLayoutRewriter19RewriteBufferAccessEPNS0_6BufferEPNS_7runtime5ArrayINS_8PrimExprEvEE'/>
<use f='tvm/src/tir/schedule/transform.cc' l='364' u='c' c='_ZN3tvm3tir27BlockBufferAccessSimplifier20SimplifyAccessRegionEPNS_7runtime5ArrayINS0_12BufferRegionEvEE'/>
<use f='tvm/src/tir/schedule/transform.cc' l='367' u='c' c='_ZN3tvm3tir27BlockBufferAccessSimplifier20SimplifyAccessRegionEPNS_7runtime5ArrayINS0_12BufferRegionEvEE'/>
<use f='tvm/src/tir/schedule/transform.cc' l='368' u='c' c='_ZN3tvm3tir27BlockBufferAccessSimplifier20SimplifyAccessRegionEPNS_7runtime5ArrayINS0_12BufferRegionEvEE'/>
<use f='tvm/src/tir/schedule/transform.cc' l='378' u='c' c='_ZN3tvm3tir27BlockBufferAccessSimplifier21SimplifyBufferIndicesEPNS_7runtime5ArrayINS_8PrimExprEvEE'/>
