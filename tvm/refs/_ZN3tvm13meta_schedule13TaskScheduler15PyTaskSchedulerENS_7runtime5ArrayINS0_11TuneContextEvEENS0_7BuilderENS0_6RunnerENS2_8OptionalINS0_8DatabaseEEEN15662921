<dec f='tvm/include/tvm/meta_schedule/task_scheduler.h' l='271' type='static tvm::meta_schedule::TaskScheduler tvm::meta_schedule::TaskScheduler::PyTaskScheduler(Array&lt;tvm::meta_schedule::TuneContext&gt; tasks, tvm::meta_schedule::Builder builder, tvm::meta_schedule::Runner runner, Optional&lt;tvm::meta_schedule::Database&gt; database, Optional&lt;tvm::meta_schedule::CostModel&gt; cost_model, Optional&lt;Array&lt;tvm::meta_schedule::MeasureCallback&gt;&gt; measure_callbacks, int max_trials, tvm::runtime::PackedFunc logging_func, PyTaskSchedulerNode::FTune f_tune, PyTaskSchedulerNode::FInitializeTask f_initialize_task, PyTaskSchedulerNode::FTouchTask f_touch_task, PyTaskSchedulerNode::FJoinRunningTask f_join_running_task, PyTaskSchedulerNode::FNextTaskId f_next_task_id)'/>
<def f='tvm/src/meta_schedule/task_scheduler/task_scheduler.cc' l='159' ll='193' type='static tvm::meta_schedule::TaskScheduler tvm::meta_schedule::TaskScheduler::PyTaskScheduler(Array&lt;tvm::meta_schedule::TuneContext&gt; tasks, tvm::meta_schedule::Builder builder, tvm::meta_schedule::Runner runner, Optional&lt;tvm::meta_schedule::Database&gt; database, Optional&lt;tvm::meta_schedule::CostModel&gt; cost_model, Optional&lt;Array&lt;tvm::meta_schedule::MeasureCallback&gt;&gt; measure_callbacks, int max_trials, tvm::runtime::PackedFunc logging_func, PyTaskSchedulerNode::FTune f_tune, PyTaskSchedulerNode::FInitializeTask f_initialize_task, PyTaskSchedulerNode::FTouchTask f_touch_task, PyTaskSchedulerNode::FJoinRunningTask f_join_running_task, PyTaskSchedulerNode::FNextTaskId f_next_task_id)'/>
<use f='tvm/src/meta_schedule/task_scheduler/task_scheduler.cc' l='198' u='r'/>
