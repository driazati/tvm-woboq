<def f='tvm/include/tvm/ir/type_functor.h' l='66' type='R tvm::TypeFunctor&lt;type-parameter-0-0 (const tvm::Type &amp;, type-parameter-0-1...)&gt;::operator()(const tvm::Type &amp; n, Args... args)'/>
<doc f='tvm/include/tvm/ir/type_functor.h' l='60'>/*!
   * \brief Same as call.
   * \param n The expression node.
   * \param args Additional arguments.
   * \return The result of the call
   */</doc>
<use f='tvm/src/relay/transforms/higher_order_gradient.cc' l='109' u='c' c='_ZN3tvm5relay11ReverseTypeERKNS_4TypeE'/>
<use f='tvm/src/relay/transforms/to_cps.cc' l='88' u='c' c='_ZN3tvm5relay7CPSTypeERKNS_4TypeERKNS_7TypeVarE'/>
