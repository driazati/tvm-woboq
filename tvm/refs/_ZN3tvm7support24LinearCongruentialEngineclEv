<def f='tvm/include/tvm/support/random_engine.h' l='93' ll='96' type='tvm::support::LinearCongruentialEngine::result_type tvm::support::LinearCongruentialEngine::operator()()'/>
<use f='tvm/include/tvm/support/random_engine.h' l='120' u='c' c='_ZN3tvm7support24LinearCongruentialEngine8ForkSeedEv'/>
<doc f='tvm/include/tvm/support/random_engine.h' l='83'>/*!
   * \brief Operator to move the random state to the next and return the new random state. According
   *  to definition of linear congruential engine, the new random state value is computed as
   *  new_random_state = (current_random_state * multiplier + increment) % modulus.
   * \return The next current random state value in the type of result_type.
   * \note In order for better efficiency, the implementation here has a few assumptions:
   *  1. The multiplication and addition won&apos;t overflow.
   *  2. The given random state pointer `rand_state_ptr` is not nullptr.
   *  3. The given random state `*(rand_state_ptr)` is in the range of [0, modulus - 1].
   */</doc>
