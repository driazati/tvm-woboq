<dec f='tvm/include/tvm/meta_schedule/search_strategy.h' l='97' type='void tvm::meta_schedule::SearchStrategyNode::PreTuning(const Array&lt;tir::Schedule&gt; &amp; design_spaces, const Optional&lt;tvm::meta_schedule::Database&gt; &amp; database, const Optional&lt;tvm::meta_schedule::CostModel&gt; &amp; cost_model)'/>
<doc f='tvm/include/tvm/meta_schedule/search_strategy.h' l='88'>/*!
   * \brief Pre-tuning for the search strategy.
   * \param design_spaces The design spaces used during tuning process.
   * \param database The database used during tuning process.
   * \param cost_model The cost model used during tuning process.
   * \note Pre-tuning is supposed to be called before the tuning process and after the
   *  initialization. Because the search strategy is stateful, we can always call pretuning
   *  and reset the search strategy.
   */</doc>
<ovr f='tvm/src/meta_schedule/search_strategy/evolutionary_search.cc' l='390' c='_ZN3tvm13meta_schedule22EvolutionarySearchNode9PreTuningERKNS_7runtime5ArrayINS_3tir8ScheduleEvEERKNS2_8OptionalINS0_8DatabaseEEERKNS9_INS0_9CostModelEEE'/>
<ovr f='tvm/src/meta_schedule/search_strategy/replay_func.cc' l='77' c='_ZN3tvm13meta_schedule14ReplayFuncNode9PreTuningERKNS_7runtime5ArrayINS_3tir8ScheduleEvEERKNS2_8OptionalINS0_8DatabaseEEERKNS9_INS0_9CostModelEEE'/>
<ovr f='tvm/src/meta_schedule/search_strategy/replay_trace.cc' l='89' c='_ZN3tvm13meta_schedule15ReplayTraceNode9PreTuningERKNS_7runtime5ArrayINS_3tir8ScheduleEvEERKNS2_8OptionalINS0_8DatabaseEEERKNS9_INS0_9CostModelEEE'/>
<ovr f='tvm/src/meta_schedule/search_strategy/search_strategy.cc' l='37' c='_ZN3tvm13meta_schedule20PySearchStrategyNode9PreTuningERKNS_7runtime5ArrayINS_3tir8ScheduleEvEERKNS2_8OptionalINS0_8DatabaseEEERKNS9_INS0_9CostModelEEE'/>
<use f='tvm/src/meta_schedule/search_strategy/search_strategy.cc' l='90' u='a'/>
<use f='tvm/src/meta_schedule/task_scheduler/task_scheduler.cc' l='50' u='c' c='_ZN3tvm13meta_schedule17TaskSchedulerNode14InitializeTaskEi'/>
