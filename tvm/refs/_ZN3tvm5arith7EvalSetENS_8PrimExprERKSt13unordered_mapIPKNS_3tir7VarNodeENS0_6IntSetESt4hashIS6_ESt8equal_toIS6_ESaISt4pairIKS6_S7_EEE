<dec f='tvm/include/tvm/arith/int_set.h' l='188' type='tvm::arith::IntSet tvm::arith::EvalSet(tvm::PrimExpr e, const std::unordered_map&lt;const tir::VarNode *, IntSet&gt; &amp; dom_map)'/>
<doc f='tvm/include/tvm/arith/int_set.h' l='181'>/*!
 * \brief Same as EvalSet, but takes unordered_map
 *
 * \param e The expression to be evaluated.
 * \param dom_map The domain of each variable.
 * \return An integer set that can cover all the possible values of e.
 */</doc>
<use f='tvm/src/arith/bound_deducer.cc' l='304' u='c' c='_ZN3tvm5arith12BoundDeducer5RelaxEv'/>
<use f='tvm/src/arith/bound_deducer.cc' l='305' u='c' c='_ZN3tvm5arith12BoundDeducer5RelaxEv'/>
<use f='tvm/src/arith/int_constraints.cc' l='158' u='c' c='_ZNK3tvm5arith14IntGroupBounds13FindBestRangeERKNS_7runtime3MapINS_3tir3VarENS_5RangeEvvEE'/>
<use f='tvm/src/arith/int_constraints.cc' l='166' u='c' c='_ZNK3tvm5arith14IntGroupBounds13FindBestRangeERKNS_7runtime3MapINS_3tir3VarENS_5RangeEvvEE'/>
<def f='tvm/src/arith/int_set.cc' l='954' ll='956' type='tvm::arith::IntSet tvm::arith::EvalSet(tvm::PrimExpr e, const std::unordered_map&lt;const VarNode *, IntSet&gt; &amp; dom_map)'/>
<use f='tvm/src/arith/solve_linear_equation.cc' l='235' u='c' c='_ZN3tvm5arith10InferRangeERKNS_7runtime3MapINS_3tir3VarENS_8PrimExprEvvEERKNS1_5ArrayIS4_vEERKNS2_IS4_NS_5RangeEvvEE'/>
<use f='tvm/src/te/autodiff/ad_simplify.cc' l='654' u='c' c='_ZN3tvm2te22EliminateDivModMutator13AddNewVarPairERKNS_8PrimExprES4_lNS_5arith7DivModeE'/>
<use f='tvm/src/te/autodiff/ad_simplify.cc' l='655' u='c' c='_ZN3tvm2te22EliminateDivModMutator13AddNewVarPairERKNS_8PrimExprES4_lNS_5arith7DivModeE'/>
<use f='tvm/src/tir/ir/index_map.cc' l='218' u='c' c='_ZNK3tvm3tir12IndexMapNode9MapRangesERKNS_7runtime5ArrayINS_5RangeEvEEPNS_5arith8AnalyzerE'/>
<use f='tvm/src/tir/transforms/remove_no_op.cc' l='143' u='c' c='_ZN3tvm3tir11NoOpRemover10VisitStmt_EPKNS0_7ForNodeE'/>
