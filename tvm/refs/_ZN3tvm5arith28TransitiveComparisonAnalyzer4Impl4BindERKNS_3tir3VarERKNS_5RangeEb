<dec f='tvm/src/arith/transitive_comparison_analyzer.cc' l='65' type='void tvm::arith::TransitiveComparisonAnalyzer::Impl::Bind(const tir::Var &amp; var, const tvm::Range &amp; expr, bool allow_override = false)'/>
<use f='tvm/src/arith/transitive_comparison_analyzer.cc' l='486' u='c' c='_ZN3tvm5arith28TransitiveComparisonAnalyzer4BindERKNS_3tir3VarERKNS_5RangeEb'/>
<def f='tvm/src/arith/transitive_comparison_analyzer.cc' l='504' ll='530' type='void tvm::arith::TransitiveComparisonAnalyzer::Impl::Bind(const tir::Var &amp; var, const tvm::Range &amp; range, bool allow_override = false)'/>
<use f='tvm/src/arith/transitive_comparison_analyzer.cc' l='534' u='c' c='_ZN3tvm5arith28TransitiveComparisonAnalyzer4Impl4BindERKNS_3tir3VarERKNS_8PrimExprEb'/>
<doc f='tvm/src/arith/transitive_comparison_analyzer.cc' l='59'>/*! \brief Bind a variable as being within a specified range
   *
   * \param var The variable of interest.
   * \param range The known range
   * \param allow_override Whether to allow override of existing information.
   */</doc>
